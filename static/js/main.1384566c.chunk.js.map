{"version":3,"sources":["components/moviesearch/Movie.js","components/moviesearch/Search.js","components/moviesearch/MovieSearchApp.js","redux/actions/todoActionTypes.js","redux/actions/todoActions.js","components/todolist/AddTodo.js","constants/constants.js","redux/selectors/selectors.js","components/todolist/Todo.js","components/todolist/TodoList.js","components/todolist/VisibilityFilters.js","components/todolist/TodoApp.js","components/App.js","reportWebVitals.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Movie","movie","poster","Poster","className","width","alt","Title","src","Year","Search","props","useState","searchValue","setSearchValue","callSearchFunction","e","target","value","preventDefault","search","onChange","onPressEnter","onClick","initialState","loading","movies","errorMessage","reducer","state","action","type","payload","error","MovieSearchApp","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","Response","map","index","ADD_TODO","TOGGLE_TODO","SET_FILTER","UPDATE_TODO","DELETE_TODO","nextTodoId","AddTodo","updateInput","event","setState","input","handleAddTodo","addTodo","this","React","Component","connect","content","id","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","getTodosState","store","todos","getTodos","allIds","getTodoList","byIds","getTodoById","getTodosByCurrentVisibilityFilter","visibilityFilter","allTodos","filter","todo","completed","getTodosByVisibilityFilter","Todo","toggleTodo","updateTodo","deleteTodo","handleChange","bordered","onBlur","defaultValue","DeleteOutlined","updateTodoAction","deleteTodoAction","toggleTodoAction","newValue","length","activeFilter","setFilter","Object","keys","filterKey","currentFilter","cx","TodoApp","App","mode","Item","icon","VideoCameraOutlined","to","EditOutlined","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","item","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1384566c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n    \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\n\r\nconst Movie = ({ movie }) => {\r\n    const poster =\r\n        movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n    return (\r\n        <div className=\"movie\">\r\n            <div>\r\n                <img\r\n                    width=\"300\"\r\n                    alt={`The movie titled: ${movie.Title}`}\r\n                    src={poster}\r\n                />\r\n            </div>\r\n            <p>{movie.Title} ({movie.Year})</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Movie;","import React, { useState } from \"react\";\r\nimport { Button, Input } from 'antd';\r\n\r\nconst Search = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const handleSearchInputChanges = (e) => {\r\n        setSearchValue(e.target.value);\r\n    }\r\n\r\n    const resetInputField = () => {\r\n        setSearchValue(\"\")\r\n    }\r\n\r\n    const callSearchFunction = (e) => {\r\n        if (e.target.value) {\r\n            e.preventDefault();\r\n            props.search(searchValue);\r\n            resetInputField();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <Input\r\n                value={searchValue}\r\n                onChange={handleSearchInputChanges}\r\n                onPressEnter={callSearchFunction}\r\n            ></Input>\r\n            <Button onClick={callSearchFunction} >Search</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useReducer, useEffect } from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport Search from \"./Search\";\r\nimport './MovieSearchApp.scss';\r\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // you should replace this with yours\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    movies: [],\r\n    errorMessage: null\r\n};\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SEARCH_MOVIES_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMessage: null\r\n            };\r\n        case \"SEARCH_MOVIES_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movies: action.payload\r\n            };\r\n        case \"SEARCH_MOVIES_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst MovieSearchApp = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    // userEffect is a hook, get called after every update, accept two arguments, the function that we want to run, \r\n    // the array which will invoke function to run when its value get changed, if it is empty, it will run only once\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n        fetch(MOVIE_API_URL)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                dispatch({\r\n                    type: \"SEARCH_MOVIES_SUCCESS\",\r\n                    payload: jsonResponse.Search\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    const search = searchValue => {\r\n        dispatch({\r\n            type: \"SEARCH_MOVIES_REQUEST\"\r\n        });\r\n\r\n        fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                if (jsonResponse.Response === \"True\") {\r\n                    dispatch({\r\n                        type: \"SEARCH_MOVIES_SUCCESS\",\r\n                        payload: jsonResponse.Search\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: \"SEARCH_MOVIES_SUCCESS\",\r\n                        payload: jsonResponse.Search\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const { movies, errorMessage, loading } = state;\r\n    return (\r\n        <div className=\"movie-search-container\">\r\n            <h2>Movie Search</h2>\r\n            <Search search={search} />\r\n\r\n            <div className=\"movies\">\r\n                {loading && !errorMessage ? (\r\n                    <span>loading...</span>\r\n                ) : errorMessage ? (\r\n                    <div className=\"errorMessage\">{errorMessage}</div>\r\n                ) : (\r\n                            movies.map((movie, index) => (\r\n                                <Movie key={`${index}-${movie.Title}`} movie={movie} />\r\n                            ))\r\n                        )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default MovieSearchApp;","export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";","import { ADD_TODO, UPDATE_TODO, TOGGLE_TODO, SET_FILTER, DELETE_TODO } from \"./todoActionTypes\";\r\n\r\nlet nextTodoId = 0;\r\nexport const addTodo = content => ({\r\n    type: ADD_TODO,\r\n    payload: {\r\n        id: ++nextTodoId,\r\n        content\r\n    }\r\n});\r\n\r\nexport const updateTodoAction = (id, value) => {\r\n    return {\r\n        type: UPDATE_TODO,\r\n        payload: {\r\n            id: id,\r\n            value: value\r\n        }\r\n    }\r\n};\r\nexport const deleteTodoAction = (id) => {\r\n    return {\r\n        type: DELETE_TODO,\r\n        payload: {\r\n            id: id\r\n        }\r\n    }\r\n};\r\n\r\nexport const toggleTodoAction = id => ({\r\n    type: TOGGLE_TODO,\r\n    payload: { id }\r\n})\r\n\r\nexport const setFilter = filter => ({\r\n    type: SET_FILTER,\r\n    payload: { filter }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"./../../redux/actions/todoActions\";\r\nimport { Button, Input } from 'antd';\r\nclass AddTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { input: \"\" };\r\n    }\r\n\r\n    updateInput = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    };\r\n\r\n    handleAddTodo = () => {\r\n        if (this.state.input) {\r\n            this.props.addTodo(this.state.input);\r\n            this.setState({ input: \"\" });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"todo-container\">\r\n                <Input\r\n                    onChange={this.updateInput}\r\n                    onPressEnter={this.handleAddTodo}\r\n                    value={this.state.input}></Input>\r\n                <Button onClick={this.handleAddTodo}> Add New</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { addTodo })(AddTodo); // will bind addTodo action with this component as its props","export const VISIBILITY_FILTERS = {\r\n    ALL: \"all\",\r\n    COMPLETED: \"completed\",\r\n    INCOMPLETE: \"incomplete\"\r\n}","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\r\n\r\nexport const getTodosState = store => store.todos;\r\nexport const getTodoList = store =>\r\n    getTodosState(store) ? getTodosState(store).allIds : [];\r\n\r\nexport const getTodoById = (store, id) =>\r\n    getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\r\n\r\nexport const getTodos = store =>\r\n    getTodoList(store).map(id => getTodoById(store, id));\r\n\r\nexport const getVisibilityFilters = store => {\r\n    return store.visibilityFilter;\r\n};\r\n\r\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\r\n    const allTodos = getTodos(store);\r\n    switch (visibilityFilter) {\r\n        case VISIBILITY_FILTERS.COMPLETED:\r\n            return allTodos.filter(todo => todo.completed);\r\n        case VISIBILITY_FILTERS.INCOMPLETE:\r\n            return allTodos.filter(todo => !todo.completed);\r\n        case VISIBILITY_FILTERS.ALL:\r\n        default:\r\n            return allTodos;\r\n    }\r\n};\r\n\r\nexport const getTodosByCurrentVisibilityFilter = (store) => {\r\n    return getTodosByVisibilityFilter(store, store.visibilityFilter);\r\n}","import { GrCheckboxSelected, GrCheckbox } from 'react-icons/gr';\r\nimport { Input } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\n\r\nconst Todo = ({ todo, toggleTodo, updateTodo, deleteTodo }) => {\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.value) {\r\n            updateTodo(todo.id, e.target.value);\r\n        } else {\r\n            deleteTodo(todo.id);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"todo-item\" >\r\n            <span className=\"todo-checkbox\" onClick={() => toggleTodo(todo.id)}>\r\n                {todo && todo.completed ? <GrCheckboxSelected /> : <GrCheckbox />}\r\n            </span>\r\n            <Input bordered={false} onPressEnter={handleChange} onBlur={handleChange} defaultValue={todo.content} />\r\n            <DeleteOutlined onClick={() => deleteTodo(todo.id)} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Todo;","import { connect } from \"react-redux\";\r\nimport { getTodos, getTodosByCurrentVisibilityFilter } from \"../../redux/selectors/selectors\";\r\nimport { updateTodoAction, toggleTodoAction, deleteTodoAction } from \"./../../redux/actions/todoActions\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, updateTodoAction, deleteTodoAction, toggleTodoAction }) => {\r\n    const updateTodo = (id, newValue) => {\r\n        updateTodoAction(id, newValue);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {todos && todos.length ?\r\n                todos.map((todo, index) => {\r\n                    return <Todo key={`todo-${todo.id}`} todo={todo} updateTodo={updateTodo}\r\n                        deleteTodo={deleteTodoAction}\r\n                        toggleTodo={toggleTodoAction}\r\n                    />;\r\n                })\r\n                : \"Nothing here!\"\r\n            }\r\n        </div>)\r\n};\r\n\r\nexport default connect(state => ({ todos: getTodosByCurrentVisibilityFilter(state) }),\r\n    { updateTodoAction, deleteTodoAction, toggleTodoAction }\r\n)(TodoList);","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/todoActions\";\r\nimport { getVisibilityFilters } from \"../../redux/selectors/selectors\";\r\nimport cx from \"classnames\";\r\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\r\n    return (\r\n        <div className=\"visibility-filters\">\r\n            {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\r\n                const currentFilter = VISIBILITY_FILTERS[filterKey];\r\n                return (\r\n                    <span key={`visibility-filter-${currentFilter}`}\r\n                        className={cx(\r\n                            \"filter\",\r\n                            (currentFilter === activeFilter) && \"filter-active\"\r\n                        )}\r\n                        onClick={() => {\r\n                            setFilter(currentFilter)\r\n                        }}\r\n                    >\r\n                        {currentFilter}\r\n                    </span>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(state => ({ activeFilter: getVisibilityFilters(state) }), { setFilter })(VisibilityFilters);","import React from \"react\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport './TodoApp.scss';\r\nimport TodoList from \"./TodoList\";\r\nimport VisibilityFilters from \"./VisibilityFilters\";\r\n\r\nexport default function TodoApp() {\r\n    return (\r\n        <div className=\"todo-app\">\r\n            <h1>Todo List</h1>\r\n            <AddTodo />\r\n            <VisibilityFilters />\r\n            <TodoList />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Menu } from 'antd';\nimport MovieSearchApp from './moviesearch/MovieSearchApp';\nimport TodoApp from './todolist/TodoApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport { VideoCameraOutlined, EditOutlined } from '@ant-design/icons';\n/**TODO:\n * 3. refactor movie search app, refactor reducer out\n * 3. add more functions, ranks system\n * 3. click and see more information\n * 3. create global spinner */\nfunction App() {\n  return (\n    <div>\n      <h1>Chang's React Practise Website</h1>\n      <Router>\n        <div>\n          <div className=\"menu-container\">\n            <Menu mode=\"horizontal\">\n              <Menu.Item icon={<VideoCameraOutlined />} key=\"moviesearch\">\n                <Link to=\"/moviesearch\">Search Movie</Link>\n              </Menu.Item>\n              <Menu.Item icon={<EditOutlined />} key=\"todoapp\">\n                <Link to=\"/todoapp\">To do App</Link>\n              </Menu.Item>\n            </Menu>\n          </div>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <div className=\"main-content\">\n            <Switch>\n              <Route path=\"/moviesearch\">\n                <MovieSearchApp />\n              </Route>\n              <Route path=\"/todoapp\">\n                <TodoApp />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { VISIBILITY_FILTERS } from \"../../constants/constants\"\r\nimport { SET_FILTER } from \"../actions/todoActionTypes\";\r\n\r\nconst initialState = VISIBILITY_FILTERS.ALL;\r\nconst visibilityFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER: {\r\n            return action.payload.filter;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport default visibilityFilter;","import { ADD_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO } from \"./../actions/todoActionTypes\";\r\nconst initialState = {\r\n    allIds: [],\r\n    byIds: {}\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TODO: {\r\n            const { id, content } = action.payload;\r\n            return {\r\n                ...state,\r\n                allIds: [...state.allIds, id],\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        content,\r\n                        completed: false\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case UPDATE_TODO: {\r\n            const { id, value } = action.payload;\r\n            return {\r\n                ...state,\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        ...state.byIds[id],\r\n                        content: value,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case DELETE_TODO: {\r\n            const { id } = action.payload;\r\n            delete state.byIds[id];\r\n            return {\r\n                ...state,\r\n                allIds: state.allIds.filter(item => item !== id)\r\n            }\r\n        }\r\n        case TOGGLE_TODO: {\r\n            const { id } = action.payload;\r\n            return {\r\n                ...state,\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        ...state.byIds[id],\r\n                        completed: !state.byIds[id].completed,\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\nimport todos from \"./todos\";\r\n\r\nexport default combineReducers({ todos, visibilityFilter });","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}