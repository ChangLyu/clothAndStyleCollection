{"version":3,"sources":["components/Header.js","components/moviesearch/Movie.js","components/moviesearch/Search.js","components/moviesearch/MovieSearchApp.js","redux/actions/todoActionTypes.js","redux/actions/todoActions.js","components/todolist/AddTodo.js","constants/constants.js","redux/selectors/selectors.js","components/todolist/Todo.js","components/todolist/TodoList.js","components/todolist/VisibilityFilters.js","components/todolist/TodoApp.js","components/App.js","reportWebVitals.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Header","props","className","text","Movie","movie","poster","Poster","Title","width","alt","src","Year","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","initialState","loading","movies","errorMessage","reducer","state","action","payload","error","MovieSearchApp","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","Response","map","index","ADD_TODO","TOGGLE_TODO","SET_FILTER","nextTodoId","AddTodo","updateInput","event","setState","input","handleAddTodo","addTodo","this","React","Component","connect","content","id","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","getTodosState","store","todos","getTodos","allIds","getTodoList","byIds","getTodoById","getTodosByCurrentVisibilityFilter","visibilityFilter","allTodos","filter","todo","completed","getTodosByVisibilityFilter","toggleTodo","cx","length","activeFilter","setFilter","Object","keys","filterKey","currentFilter","TodoApp","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5a20b5a4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <h2>{props.text}</h2>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n    \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\n\r\nconst Movie = ({ movie }) => {\r\n    const poster =\r\n        movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n    return (\r\n        <div className=\"movie\">\r\n            <h2>{movie.Title}</h2>\r\n            <div>\r\n                <img\r\n                    width=\"200\"\r\n                    alt={`The movie titled: ${movie.Title}`}\r\n                    src={poster}\r\n                />\r\n            </div>\r\n            <p>({movie.Year})</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Movie;","import React, { useState } from \"react\";\r\n\r\n\r\nconst Search = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const handleSearchInputChanges = (e) => {\r\n        setSearchValue(e.target.value);\r\n    }\r\n\r\n    const resetInputField = () => {\r\n        setSearchValue(\"\")\r\n    }\r\n\r\n    const callSearchFunction = (e) => {\r\n        e.preventDefault();\r\n        props.search(searchValue);\r\n        resetInputField();\r\n    }\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <input\r\n                value={searchValue}\r\n                onChange={handleSearchInputChanges}\r\n                type=\"text\"\r\n            />\r\n            <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useReducer, useEffect } from \"react\";\r\nimport Header from \"../Header\";\r\nimport Movie from \"./Movie\";\r\nimport Search from \"./Search\";\r\nimport './../App.css';\r\n\r\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // you should replace this with yours\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    movies: [],\r\n    errorMessage: null\r\n};\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SEARCH_MOVIES_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMessage: null\r\n            };\r\n        case \"SEARCH_MOVIES_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movies: action.payload\r\n            };\r\n        case \"SEARCH_MOVIES_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst MovieSearchApp = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    // userEffect is a hook, get called after every update, accept two arguments, the function that we want to run, \r\n    // the array which will invoke function to run when its value get changed, if it is empty, it will run only once\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n        fetch(MOVIE_API_URL)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                dispatch({\r\n                    type: \"SEARCH_MOVIES_SUCCESS\",\r\n                    payload: jsonResponse.Search\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    const search = searchValue => {\r\n        dispatch({\r\n            type: \"SEARCH_MOVIES_REQUEST\"\r\n        });\r\n\r\n        fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                if (jsonResponse.Response === \"True\") {\r\n                    dispatch({\r\n                        type: \"SEARCH_MOVIES_SUCCESS\",\r\n                        payload: jsonResponse.Search\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: \"SEARCH_MOVIES_SUCCESS\",\r\n                        payload: jsonResponse.Search\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const { movies, errorMessage, loading } = state;\r\n    return (\r\n        <div className=\"App\">\r\n            <Header text=\"MOVIE SEARCH ENGINE\" />\r\n            <Search search={search} />\r\n            <p className=\"App-intro\">Sharing a few of our favourite movies</p>\r\n            <div className=\"movies\">\r\n                {loading && !errorMessage ? (\r\n                    <span>loading...</span>\r\n                ) : errorMessage ? (\r\n                    <div className=\"errorMessage\">{errorMessage}</div>\r\n                ) : (\r\n                            movies.map((movie, index) => (\r\n                                <Movie key={`${index}-${movie.Title}`} movie={movie} />\r\n                            ))\r\n                        )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default MovieSearchApp;","export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_FILTER = \"SET_FILTER\";","import { ADD_TODO, TOGGLE_TODO, SET_FILTER } from \"./todoActionTypes\";\r\n\r\nlet nextTodoId = 0;\r\nexport const addTodo = content => ({\r\n    type: ADD_TODO,\r\n    payload: {\r\n        id: ++nextTodoId,\r\n        content\r\n    }\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n    type: TOGGLE_TODO,\r\n    payload: { id }\r\n})\r\n\r\nexport const setFilter = filter => ({\r\n    type: SET_FILTER,\r\n    payload: { filter }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"./../../redux/actions/todoActions\";\r\nclass AddTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { input: \"\" };\r\n    }\r\n\r\n    updateInput = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    };\r\n\r\n    handleAddTodo = () => {\r\n        this.props.addTodo(this.state.input);\r\n        this.setState({ input: \"\" });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                    onChange={this.updateInput}\r\n                    value={this.state.input}></input>\r\n                <button onClick={this.handleAddTodo}>Add todo</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { addTodo })(AddTodo); // will bind addTodo action with this component as its props","export const VISIBILITY_FILTERS = {\r\n    ALL: \"all\",\r\n    COMPLETED: \"completed\",\r\n    INCOMPLETE: \"incomplete\"\r\n}","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\r\n\r\nexport const getTodosState = store => store.todos;\r\nexport const getTodoList = store =>\r\n    getTodosState(store) ? getTodosState(store).allIds : [];\r\n\r\nexport const getTodoById = (store, id) =>\r\n    getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\r\n\r\nexport const getTodos = store =>\r\n    getTodoList(store).map(id => getTodoById(store, id));\r\n\r\nexport const getVisibilityFilters = store => {\r\n    return store.visibilityFilter;\r\n};\r\n\r\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\r\n    const allTodos = getTodos(store);\r\n    switch (visibilityFilter) {\r\n        case VISIBILITY_FILTERS.COMPLETED:\r\n            return allTodos.filter(todo => todo.completed);\r\n        case VISIBILITY_FILTERS.INCOMPLETE:\r\n            return allTodos.filter(todo => !todo.completed);\r\n        case VISIBILITY_FILTERS.ALL:\r\n        default:\r\n            return allTodos;\r\n    }\r\n};\r\n\r\nexport const getTodosByCurrentVisibilityFilter = (store) => {\r\n    return getTodosByVisibilityFilter(store, store.visibilityFilter);\r\n}","import { connect } from \"react-redux\"\r\nimport { toggleTodo } from \"./../../redux/actions/todoActions\";\r\nimport cx from \"classnames\";\r\nimport { GrCheckboxSelected, GrCheckbox } from 'react-icons/gr';\r\nconst Todo = ({ todo, toggleTodo }) => {\r\n    return (\r\n        <div className=\"todo-item\" onClick={() => toggleTodo(todo.id)}>\r\n            {todo && todo.completed ? <GrCheckboxSelected /> : <GrCheckbox />}\r\n            {\" \"}\r\n            <span className={cx(\r\n                \"todo-item_text\",\r\n                todo && todo.completed && \"todo-item_text-completed\"\r\n            )}>\r\n                {todo.content}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(null, { toggleTodo })(Todo);","import { connect } from \"react-redux\";\r\nimport { getTodos, getTodosByCurrentVisibilityFilter } from \"../../redux/selectors/selectors\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos }) => {\r\n    return (<ul>\r\n        {todos && todos.length ?\r\n            todos.map((todo, index) => {\r\n                return <Todo key={`todo-${todo.id}`} todo={todo} />;\r\n            })\r\n            : \"No Todos, yay!\"\r\n        }\r\n    </ul>)\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//     const { byIds, allIds } = state.todos || {};\r\n//     const todos =\r\n//         allIds && allIds.length ? allIds.map(id => { byIds ? { ...byIds[id], id } : null }) : null; // {content, completed, id}\r\n//     return { todos };\r\n// }\r\n\r\nexport default connect(state => ({ todos: getTodosByCurrentVisibilityFilter(state) }))(TodoList);","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/todoActions\";\r\nimport { getVisibilityFilters } from \"../../redux/selectors/selectors\";\r\nimport cx from \"classnames\";\r\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\r\n    return (\r\n        <div className=\"visibility-filters\">\r\n            {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\r\n                const currentFilter = VISIBILITY_FILTERS[filterKey];\r\n                return (\r\n                    <span key={`visibility-filter-${currentFilter}`}\r\n                        className={cx(\r\n                            \"filter\",\r\n                            (currentFilter === activeFilter) && \"filter-active\"\r\n                        )}\r\n                        onClick={() => {\r\n                            setFilter(currentFilter)\r\n                        }}\r\n                    >\r\n                        {currentFilter}\r\n                    </span>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(state => ({ activeFilter: getVisibilityFilters(state) }), { setFilter })(VisibilityFilters);","import React from \"react\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport './TodoApp.css';\r\nimport TodoList from \"./TodoList\";\r\nimport VisibilityFilters from \"./VisibilityFilters\";\r\n\r\nexport default function TodoApp() {\r\n    return (\r\n        <div className=\"todo-app\">\r\n            <h1>Todo List</h1>\r\n            <AddTodo />\r\n            <VisibilityFilters />\r\n            <TodoList />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport MovieSearchApp from './moviesearch/MovieSearchApp';\nimport TodoApp from './todolist/TodoApp';\n\n/**TODO:\n * 1. use router to config different app\n * 2. add another movie search api\n * 3. refactor movie search app, refactor reducer out\n * 3. add more functions, ranks system\n * 3. click and see more information\n * 3. create global spinner */\nfunction App() {\n  return (\n    <div>\n      <h1>Header</h1>\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/moviesearch\">Search Movie</Link>\n              </li>\n              <li>\n                <Link to=\"/todoapp\">To do App</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/moviesearch\">\n              <MovieSearchApp />\n            </Route>\n            <Route path=\"/todoapp\">\n              <TodoApp />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { VISIBILITY_FILTERS } from \"../../constants/constants\"\r\nimport { SET_FILTER } from \"../actions/todoActionTypes\";\r\n\r\nconst initialState = VISIBILITY_FILTERS.ALL;\r\nconst visibilityFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER: {\r\n            return action.payload.filter;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport default visibilityFilter;","import { ADD_TODO, TOGGLE_TODO } from \"./../actions/todoActionTypes\";\r\nconst initialState = {\r\n    allIds: [],\r\n    byIds: {}\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TODO: {\r\n            const { id, content } = action.payload;\r\n            return {\r\n                ...state,\r\n                allIds: [...state.allIds, id],\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        content,\r\n                        completed: false\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case TOGGLE_TODO: {\r\n            const { id } = action.payload;\r\n            return {\r\n                ...state,\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        ...state.byIds[id],\r\n                        completed: !state.byIds[id].completed,\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\nimport todos from \"./todos\";\r\n\r\nexport default combineReducers({ todos, visibilityFilter });","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}