{"version":3,"sources":["components/moviesearch/Movie.js","components/moviesearch/Search.js","components/moviesearch/MovieSearchApp.js","redux/actions/todoActionTypes.js","redux/actions/todoActions.js","components/todolist/AddTodo.js","constants/constants.js","redux/selectors/selectors.js","components/todolist/Todo.js","components/todolist/TodoList.js","components/todolist/VisibilityFilters.js","components/todolist/TodoApp.js","utils/math.algorithm.js","components/algorithm/algorithems/FastMultiplacation.js","utils/algorithm.countinversion.js","components/algorithm/algorithems/CountInversion.js","utils/algorithm.quicksort.js","utils/logger.js","components/algorithm/algorithems/QuickSort.js","components/algorithm/AlgorithmApp.js","components/App.js","reportWebVitals.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Movie","movie","poster","Poster","className","width","alt","Title","src","Year","Search","props","useState","searchValue","setSearchValue","callSearchFunction","e","target","value","preventDefault","search","onChange","onPressEnter","onClick","initialState","loading","movies","errorMessage","reducer","state","action","type","payload","error","MovieSearchApp","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","Response","map","index","ADD_TODO","TOGGLE_TODO","SET_FILTER","UPDATE_TODO","DELETE_TODO","nextTodoId","AddTodo","updateInput","event","setState","input","handleAddTodo","addTodo","this","React","Component","connect","content","id","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","getTodosState","store","todos","getTodos","allIds","getTodoList","byIds","getTodoById","getTodosByCurrentVisibilityFilter","visibilityFilter","allTodos","filter","todo","completed","getTodosByVisibilityFilter","Todo","toggleTodo","updateTodo","deleteTodo","handleChange","bordered","onBlur","defaultValue","DeleteOutlined","updateTodoAction","deleteTodoAction","toggleTodoAction","newValue","length","activeFilter","setFilter","Object","keys","filterKey","currentFilter","cx","TodoApp","bigInt","require","karatsubaMul","a","b","a_str","toString","b_str","a_int","b_int","compare","multiply","m","Math","floor","min","a_int_high","substring","a_int_low","b_int_high","b_int_low","z2_str","z0_str","z1_str","add","minus","repeat","FastMultiplication","firstValue","setFirstValue","secondValue","setSecondValue","result","time","karaCalcResult","setKaraCalcResult","norCalcResult","setNorCalcResult","norCalcResultByBigInt","setNorCalcResultByBigInt","placeholder","t0","performance","now","t1","countInversion","array","sortAndCount","list","half","ceil","firstHalf","slice","secondHalf","firstSortedArray","firstHalfCount","secondSortedArray","secondHalfCount","firstArray","secondArray","totalNum","reverseCount","i","j","push","countSplitInvAndSort","CountInversion","setList","file","setFile","setResult","split","ele","parseInt","val","isNaN","reader","FileReader","readAsText","files","onload","JSON","stringify","quickSortFirstPivot","l","r","count","p","partitionByPivotAtFirst","quickSortLastPivot","swap","quickSortMedianPivot","midIndex","findMedianOfThree","pivot","leftIndex","rightIndex","oldConsoleLog","pub","window","console","log","QuickSort","quickSortLastPivotResult","setQuickSortLastPivotResult","quickSortFirstPivotResult","setQuickSortFirstPivotResult","quickSortMedianPivotResult","setQuickSortMedianPivotResult","Array","from","AlgorithmApp","useRouteMatch","path","url","to","App","Container","mode","Item","icon","VideoCameraOutlined","EditOutlined","BookOutlined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","item","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4033d28b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DEFAULT_PLACEHOLDER_IMAGE =\n    \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\n\n\nconst Movie = ({ movie }) => {\n    const poster =\n        movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n    return (\n        <div className=\"movie\">\n            <div>\n                <img\n                    width=\"300\"\n                    alt={`The movie titled: ${movie.Title}`}\n                    src={poster}\n                />\n            </div>\n            <p>{movie.Title} ({movie.Year})</p>\n        </div>\n    );\n};\n\n\nexport default Movie;","import React, { useState } from \"react\";\nimport { Button, Input } from 'antd';\n\nconst Search = (props) => {\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleSearchInputChanges = (e) => {\n        setSearchValue(e.target.value);\n    }\n\n    const resetInputField = () => {\n        setSearchValue(\"\")\n    }\n\n    const callSearchFunction = (e) => {\n        if (e.target.value) {\n            e.preventDefault();\n            props.search(searchValue);\n            resetInputField();\n        }\n    }\n\n    return (\n        <div className=\"search-container\">\n            <Input\n                value={searchValue}\n                onChange={handleSearchInputChanges}\n                onPressEnter={callSearchFunction}\n            ></Input>\n            <Button onClick={callSearchFunction} >Search</Button>\n        </div>\n    );\n}\n\nexport default Search;","import React, { useReducer, useEffect } from \"react\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nimport './MovieSearchApp.scss';\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // you should replace this with yours\n\nconst initialState = {\n    loading: true,\n    movies: [],\n    errorMessage: null\n};\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"SEARCH_MOVIES_REQUEST\":\n            return {\n                ...state,\n                loading: true,\n                errorMessage: null\n            };\n        case \"SEARCH_MOVIES_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                movies: action.payload\n            };\n        case \"SEARCH_MOVIES_FAILURE\":\n            return {\n                ...state,\n                loading: false,\n                errorMessage: action.error\n            };\n        default:\n            return state;\n    }\n};\nconst MovieSearchApp = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    // userEffect is a hook, get called after every update, accept two arguments, the function that we want to run, \n    // the array which will invoke function to run when its value get changed, if it is empty, it will run only once\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        fetch(MOVIE_API_URL)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                dispatch({\n                    type: \"SEARCH_MOVIES_SUCCESS\",\n                    payload: jsonResponse.Search\n                });\n            });\n    }, []);\n\n    const search = searchValue => {\n        dispatch({\n            type: \"SEARCH_MOVIES_REQUEST\"\n        });\n\n        fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                if (jsonResponse.Response === \"True\") {\n                    dispatch({\n                        type: \"SEARCH_MOVIES_SUCCESS\",\n                        payload: jsonResponse.Search\n                    });\n                } else {\n                    dispatch({\n                        type: \"SEARCH_MOVIES_SUCCESS\",\n                        payload: jsonResponse.Search\n                    });\n                }\n            });\n    };\n\n    const { movies, errorMessage, loading } = state;\n    return (\n        <div className=\"movie-search-container\">\n            <h2>Movie Search</h2>\n            <Search search={search} />\n\n            <div className=\"movies\">\n                {loading && !errorMessage ? (\n                    <span>loading...</span>\n                ) : errorMessage ? (\n                    <div className=\"errorMessage\">{errorMessage}</div>\n                ) : (\n                            movies.map((movie, index) => (\n                                <Movie key={`${index}-${movie.Title}`} movie={movie} />\n                            ))\n                        )}\n            </div>\n        </div>\n    );\n};\n\n\nexport default MovieSearchApp;","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";","import { ADD_TODO, UPDATE_TODO, TOGGLE_TODO, SET_FILTER, DELETE_TODO } from \"./todoActionTypes\";\n\nlet nextTodoId = 0;\nexport const addTodo = content => ({\n    type: ADD_TODO,\n    payload: {\n        id: ++nextTodoId,\n        content\n    }\n});\n\nexport const updateTodoAction = (id, value) => {\n    return {\n        type: UPDATE_TODO,\n        payload: {\n            id: id,\n            value: value\n        }\n    }\n};\nexport const deleteTodoAction = (id) => {\n    return {\n        type: DELETE_TODO,\n        payload: {\n            id: id\n        }\n    }\n};\n\nexport const toggleTodoAction = id => ({\n    type: TOGGLE_TODO,\n    payload: { id }\n})\n\nexport const setFilter = filter => ({\n    type: SET_FILTER,\n    payload: { filter }\n})","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"./../../redux/actions/todoActions\";\nimport { Button, Input } from 'antd';\nclass AddTodo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { input: \"\" };\n    }\n\n    updateInput = (event) => {\n        this.setState({ input: event.target.value });\n    };\n\n    handleAddTodo = () => {\n        if (this.state.input) {\n            this.props.addTodo(this.state.input);\n            this.setState({ input: \"\" });\n        }\n    }\n    render() {\n        return (\n            <div className=\"todo-container\">\n                <Input\n                    onChange={this.updateInput}\n                    onPressEnter={this.handleAddTodo}\n                    value={this.state.input}></Input>\n                <Button onClick={this.handleAddTodo}> Add New</Button>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, { addTodo })(AddTodo); // will bind addTodo action with this component as its props","export const VISIBILITY_FILTERS = {\n    ALL: \"all\",\n    COMPLETED: \"completed\",\n    INCOMPLETE: \"incomplete\"\n}","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\n\nexport const getTodosState = store => store.todos;\nexport const getTodoList = store =>\n    getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n    getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\nexport const getTodos = store =>\n    getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getVisibilityFilters = store => {\n    return store.visibilityFilter;\n};\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n    const allTodos = getTodos(store);\n    switch (visibilityFilter) {\n        case VISIBILITY_FILTERS.COMPLETED:\n            return allTodos.filter(todo => todo.completed);\n        case VISIBILITY_FILTERS.INCOMPLETE:\n            return allTodos.filter(todo => !todo.completed);\n        case VISIBILITY_FILTERS.ALL:\n        default:\n            return allTodos;\n    }\n};\n\nexport const getTodosByCurrentVisibilityFilter = (store) => {\n    return getTodosByVisibilityFilter(store, store.visibilityFilter);\n}","import { GrCheckboxSelected, GrCheckbox } from 'react-icons/gr';\nimport { Input } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons'\n\nconst Todo = ({ todo, toggleTodo, updateTodo, deleteTodo }) => {\n\n    const handleChange = (e) => {\n        if (e.target.value) {\n            updateTodo(todo.id, e.target.value);\n        } else {\n            deleteTodo(todo.id);\n        }\n    }\n    return (\n        <div className=\"todo-item\" >\n            <span className=\"todo-checkbox\" onClick={() => toggleTodo(todo.id)}>\n                {todo && todo.completed ? <GrCheckboxSelected /> : <GrCheckbox />}\n            </span>\n            <Input bordered={false} onPressEnter={handleChange} onBlur={handleChange} defaultValue={todo.content} />\n            <DeleteOutlined onClick={() => deleteTodo(todo.id)} />\n        </div>\n    );\n}\n\n\nexport default Todo;","import { connect } from \"react-redux\";\nimport { getTodos, getTodosByCurrentVisibilityFilter } from \"../../redux/selectors/selectors\";\nimport { updateTodoAction, toggleTodoAction, deleteTodoAction } from \"./../../redux/actions/todoActions\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, updateTodoAction, deleteTodoAction, toggleTodoAction }) => {\n    const updateTodo = (id, newValue) => {\n        updateTodoAction(id, newValue);\n    }\n\n    return (\n        <div>\n            {todos && todos.length ?\n                todos.map((todo, index) => {\n                    return <Todo key={`todo-${todo.id}`} todo={todo} updateTodo={updateTodo}\n                        deleteTodo={deleteTodoAction}\n                        toggleTodo={toggleTodoAction}\n                    />;\n                })\n                : \"Nothing here!\"\n            }\n        </div>)\n};\n\nexport default connect(state => ({ todos: getTodosByCurrentVisibilityFilter(state) }),\n    { updateTodoAction, deleteTodoAction, toggleTodoAction }\n)(TodoList);","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../../redux/actions/todoActions\";\nimport { getVisibilityFilters } from \"../../redux/selectors/selectors\";\nimport cx from \"classnames\";\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\n    return (\n        <div className=\"visibility-filters\">\n            {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n                const currentFilter = VISIBILITY_FILTERS[filterKey];\n                return (\n                    <span key={`visibility-filter-${currentFilter}`}\n                        className={cx(\n                            \"filter\",\n                            (currentFilter === activeFilter) && \"filter-active\"\n                        )}\n                        onClick={() => {\n                            setFilter(currentFilter)\n                        }}\n                    >\n                        {currentFilter}\n                    </span>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport default connect(state => ({ activeFilter: getVisibilityFilters(state) }), { setFilter })(VisibilityFilters);","import React from \"react\";\nimport AddTodo from \"./AddTodo\";\nimport './TodoApp.scss';\nimport TodoList from \"./TodoList\";\nimport VisibilityFilters from \"./VisibilityFilters\";\n\nexport default function TodoApp() {\n    return (\n        <div className=\"todo-app\">\n            <h1>Todo List</h1>\n            <AddTodo />\n            <VisibilityFilters />\n            <TodoList />\n\n        </div>\n    );\n}\n","var bigInt = require(\"big-integer\");\n\n\n/**input string, output string\n */\nexport function karatsubaMul(a, b) {\n    const base = 10;\n    const a_str = a.toString();\n    const b_str = b.toString();\n    const a_int = bigInt(a_str);\n    const b_int = bigInt(b_str);\n\n    if (a_int.compare(base) === -1 || b_int.compare(base) === -1) {\n        return a_int.multiply(b_int).toString();\n    } else {\n\n        const m = Math.floor(Math.min(a_str.length, b_str.length) / 2);\n        var a_int_high = bigInt(a_str.substring(0, a_str.length - m));\n        var a_int_low = bigInt(a_str.substring(a_str.length - m, a_str.length));\n        var b_int_high = bigInt(b_str.substring(0, b_str.length - m));\n        var b_int_low = bigInt(b_str.substring(b_str.length - m, b_str.length));\n\n        var z2_str = karatsubaMul(a_int_high, b_int_high);\n        var z0_str = karatsubaMul(a_int_low, b_int_low);\n        var z1_str = karatsubaMul(a_int_low.add(a_int_high), b_int_low.add(b_int_high));\n        z1_str = bigInt(z1_str).minus(bigInt(z2_str)).minus(bigInt(z0_str)).toString();\n\n        z2_str += '0'.repeat(m * 2)\n        z1_str += '0'.repeat(m)\n        var r = bigInt(z2_str).add(bigInt(z1_str)).add(bigInt(z0_str));\n        return r.toString();\n    }\n\n\n\n}\n\nexport function multiplyByBigInitLib(a, b) {\n    return bigInt(a).multiply(bigInt(b)).toString();\n}\n","import React, { useState } from \"react\";\nimport { Button, Input } from 'antd';\nimport { karatsubaMul, multiplyByBigInitLib } from \"../../../utils/math.algorithm\";\nexport default function FastMultiplication() {\n    const [firstValue, setFirstValue] = useState(null);\n    const [secondValue, setSecondValue] = useState(null);\n    const [karaCalcResult, setKaraCalcResult] = useState({ result: null, time: null });\n    const [norCalcResult, setNorCalcResult] = useState({ result: null, time: null });\n    const [norCalcResultByBigInt, setNorCalcResultByBigInt] = useState({ result: null, time: null });\n    const handleFirst = (e) => {\n        if (e.target.value) {\n            setFirstValue(e.target.value);\n        }\n    }\n    const handleSecond = (e) => {\n        if (e.target.value) {\n            setSecondValue(e.target.value);\n        }\n    }\n    const handleKaratsubaMul = (e) => {\n        const t0 = performance.now();\n        const result = karatsubaMul(firstValue, secondValue);\n        const t1 = performance.now();\n        setKaraCalcResult({ result: result, time: t1 - t0 });\n    }\n\n    const handleNormalMul = (e) => {\n        const t0 = performance.now();\n        const result = firstValue * secondValue;\n        const t1 = performance.now();\n        setNorCalcResult({ result: result, time: t1 - t0 });\n    }\n\n    const handleNormalMulWithBigInt = (e) => {\n        const t0 = performance.now();\n        const result = multiplyByBigInitLib(firstValue, secondValue);\n        const t1 = performance.now();\n        setNorCalcResultByBigInt({ result: result, time: t1 - t0 });\n    }\n\n\n    return (\n        <div className=\"container\" >\n            <div className=\"container\"  >\n                <div className=\"container\" >\n                    <Input placeholder=\"Input first number\" onChange={handleFirst} ></Input>\n                    <Input placeholder=\"Input second number\" onChange={handleSecond}></Input>\n                </div>\n                <div className=\"container\" >\n                    <Button onClick={handleKaratsubaMul}>Karatsuba Multiply</Button>\n                    <Button onClick={handleNormalMul}>Normal Multiply By JS *</Button>\n                    <Button onClick={handleNormalMulWithBigInt}>Normal Multiply By Big Int Library</Button>\n                </div>\n            </div>\n            <div className=\"container\" >\n                <div>Karatsuba Result: {karaCalcResult.result ? karaCalcResult.result : 'None'}</div>\n                <div>Karatsuba Calculate Time: {karaCalcResult.time ? karaCalcResult.time : 'None'}</div>\n                <div>Normal Result by using *: {norCalcResult.result ? norCalcResult.result : 'None'}</div>\n                <div>Normal Calculate Time by using *: {norCalcResult.time ? norCalcResult.time : 'None'}</div>\n                <div>Normal Result by using big int library directly: {norCalcResultByBigInt.result ? norCalcResultByBigInt.result : 'None'}</div>\n                <div>Normal Calculate Time by using big int library directly: {norCalcResultByBigInt.time ? norCalcResultByBigInt.time : 'None'}</div>\n            </div>\n        </div >\n    );\n}\n","export function countInversion(array) {\n\n    return sortAndCount(array);\n}\n\nfunction sortAndCount(list) {\n    if (list.length < 2) {\n        const count = 0;\n        return [list, count];\n    }\n    const half = Math.ceil(list.length / 2);\n    var firstHalf = list.slice(0, half);\n    var secondHalf = list.slice(half, list.length);\n    const [firstSortedArray, firstHalfCount] = sortAndCount(firstHalf);\n    const [secondSortedArray, secondHalfCount] = sortAndCount(secondHalf);\n    const [sortedCombine, reverseCount] = countSplitInvAndSort(firstSortedArray, secondSortedArray, list.length);\n    const totalCount = firstHalfCount + secondHalfCount + reverseCount;\n    return [sortedCombine, totalCount];\n\n}\n\nfunction countSplitInvAndSort(firstArray, secondArray, totalNum) {\n    var result = [];\n    var reverseCount = 0;\n    var i = 0;\n    var j = 0;\n\n    for (var index = 0; index < totalNum; index++) {\n        if (i < firstArray.length && j < secondArray.length) {\n            if (firstArray[i] <= secondArray[j]) {\n                result.push(firstArray[i]);\n                i++;\n            } else {\n                result.push(secondArray[j]);\n                reverseCount += firstArray.length - i;\n                j++;\n            }\n        } else if (i < firstArray.length) {\n            // first array not empty\n            result.push(firstArray[i]);\n            i++;\n        } else {\n            // second array not empty\n            result.push(secondArray[j]);\n            j++;\n        }\n\n    }\n    return [result, reverseCount];\n}","import React, { useState } from \"react\";\nimport { Input } from 'antd';\nimport { countInversion } from \"../../../utils/algorithm.countinversion\";\nexport default function CountInversion() {\n    // todo: add other algorithem to count inversion, and do time comparision\n    const [list, setList] = useState(null);\n    const [file, setFile] = useState(null);\n    const [result, setResult] = useState(null);\n    const validateInput = (e) => {\n        if (e.target.value) {\n\n            setList(e.target.value);\n        }\n    }\n    const handleInput = (e) => {\n        var array = list.split(/[ ,]+/);;\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\n        setResult(countInversion(array));\n    }\n    const onFileChange = (e) => {\n        var reader = new FileReader();\n        reader.readAsText(e.target.files[0], \"UTF-8\");\n\n        reader.onload = function () {\n            var content = reader.result;\n            setFile(content);\n        };\n\n    };\n\n    const loadFileAsText = (e) => {\n        var array = file.split(/[ ,\\n]+/);;\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\n        setResult(countInversion(array));\n    }\n    return (\n        <div className=\"count-inversion-app container\">\n            <h4>Count Inversion</h4>\n            <div className=\"container\">\n                <h5>You can input multiple numbers in below input, and click button to count inversion.</h5>\n                <Input placeholder=\"Please input multiply numbers, seperate by space or comma\" onChange={validateInput} />\n                <button className=\"ant-btn\" onClick={handleInput}>Count Inversion By Input</button>\n            </div>\n            <div className=\"container\">\n                <h5>Or you can upload txt file contains numbers, seperate by new line.</h5>\n                <input type=\"file\" id=\"fileToLoad\" onChange={onFileChange} ></input>\n                <button className=\"ant-btn\" onClick={loadFileAsText}>Count Inversion By File</button>\n            </div>\n\n            <div className=\"container \">\n                {result && result[0] ? <div className=\"container display-text\">Sorted Array is {JSON.stringify(result[0])}</div> : ''}\n                {result && result[1] ? <div className=\"container\">Inversion Count is {result[1]}</div> : ''}\n            </div>\n        </div>\n    );\n}\n","/** Count is couting how many times we have to do compare operation, the less, the better, based on the pivot\n * for example, if array is [0,1,3,4,5],we always chose last element as pivot, or the first, it will has worst behavior\n * it will be n-1 + n-2 + ...+ 1 comparison , n^2 big O\n * best secnario is nlogn big O\n */\n\nexport function quickSortFirstPivot(array, l, r, count) {\n\n    if (l >= r) { return [array, count]; }\n    let p;\n    // chose a pivot, rearrange array, less than it move to left, greater than it move to right\n\n    // chose first as pivot , then put it at last\n    [p, array, count] = partitionByPivotAtFirst(array, l, r, count);\n    [array, count] = quickSortFirstPivot(array, l, p - 1, count);\n    [array, count] = quickSortFirstPivot(array, p + 1, r, count);\n    return [array, count];\n\n}\nexport function quickSortLastPivot(array, l, r, count) {\n\n    if (l >= r) { return [array, count]; }\n    swap(array, l, r);\n    let p;\n    [p, array, count] = partitionByPivotAtFirst(array, l, r, count);\n    [array, count] = quickSortLastPivot(array, l, p - 1, count);\n    [array, count] = quickSortLastPivot(array, p + 1, r, count);\n\n    return [array, count];\n}\n\nexport function quickSortMedianPivot(array, l, r, count) {\n    if (l >= r) { return [array, count]; }\n    let p;\n    // chose a pivot, rearrange array, less than it move to left, greater than it move to right\n    let midIndex = findMedianOfThree(array, l, r);\n    swap(array, midIndex, l);\n    [p, array, count] = partitionByPivotAtFirst(array, l, r, count);\n    [array, count] = quickSortMedianPivot(array, l, p - 1, count);\n    [array, count] = quickSortMedianPivot(array, p + 1, r, count);\n\n    return [array, count];\n}\n\nfunction findMedianOfThree(array, l, r) {\n    let midIndex = parseInt((r + l) / 2);\n    if (array[l] < array[midIndex]) {\n        if (array[midIndex] < array[r]) {\n            return midIndex;\n        } else if (array[l] < array[r]) {\n            return r;\n        } else {\n            return l;\n        }\n    } else {\n        if (array[l] < array[r]) {\n            return l;\n        } else if (array[midIndex] < array[r]) {\n            return r;\n        } else {\n            return midIndex;\n        }\n    }\n}\n/**\n * @param {number[]} array input array for partition\n * @param {number} l start index of array to be partition\n * @param {number} r end index of array to be partition\n * @param {number} pivotIndex index of pivot for partition\n * @param {number} count the count of operation of comparison\n * @returns {[number,number[],number]} [pivotIndex, array, count] , pivotIndex is the index of pivot after partition\n */\nfunction partitionByPivotAtFirst(array, l, r, count) {\n    // console.log(`partition at: l: ${l} r : ${r}`);\n    let pivot = array[l];\n    let i = l + 1;\n    for (let j = l + 1; j <= r; j++) {\n        if (array[j] < pivot) {\n            swap(array, i, j);\n            i++;\n        }\n    }\n    swap(array, i - 1, l);\n    count = count + r - l;\n    return [i - 1, array, count];\n}\n\nfunction swap(array, leftIndex, rightIndex) {\n    [array[leftIndex], array[rightIndex]] = [array[rightIndex], array[leftIndex]];\n}","export var logger = function () {\n    var oldConsoleLog = null;\n    var pub = {};\n\n    pub.enableLogger = function enableLogger() {\n        if (oldConsoleLog == null)\n            return;\n\n        window['console']['log'] = oldConsoleLog;\n    };\n\n    pub.disableLogger = function disableLogger() {\n        oldConsoleLog = console.log;\n        window['console']['log'] = function () { };\n    };\n\n    return pub;\n}();","import React, { useState } from \"react\";\nimport { Input } from 'antd';\nimport { quickSortFirstPivot, quickSortLastPivot, quickSortMedianPivot } from \"../../../utils/algorithm.quicksort\";\nimport { logger } from \"../../../utils/logger\";\nexport default function QuickSort() {\n    // todo: add other algorithem to count inversion, and do time comparision\n    const [list, setList] = useState(null);\n    const [file, setFile] = useState(null);\n    const [quickSortLastPivotResult, setQuickSortLastPivotResult] = useState(null); //[result, count]\n    const [quickSortFirstPivotResult, setQuickSortFirstPivotResult] = useState(null); //[result, count]\n    const [quickSortMedianPivotResult, setQuickSortMedianPivotResult] = useState(null); //[result, count]\n    const validateInput = (e) => {\n        if (e.target.value) {\n            setList(e.target.value);\n        }\n    }\n    const handleSort = (e) => {\n        var array = list.split(/[ ,]+/);;\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\n        setQuickSortLastPivotResult(quickSortLastPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortFirstPivotResult(quickSortFirstPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortMedianPivotResult(quickSortMedianPivot(Array.from(array), 0, array.length - 1, 0));\n    }\n\n    const onFileChange = (e) => {\n        var reader = new FileReader();\n        reader.readAsText(e.target.files[0], \"UTF-8\");\n        reader.onload = function () {\n            var content = reader.result;\n            setFile(content);\n        };\n\n    };\n\n    const loadFileAsText = (e) => {\n        var array = file.split(/[ ,\\n]+/);\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\n        setQuickSortLastPivotResult(quickSortLastPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortFirstPivotResult(quickSortFirstPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortMedianPivotResult(quickSortMedianPivot(Array.from(array), 0, array.length - 1, 0));\n    }\n    return (\n        <div className=\"count-inversion-app container\">\n            <h4>Quick Sort</h4>\n            <div className=\"container\">\n                <h5>You can input multiple numbers in below input, and click button to quick sort.</h5>\n                <Input placeholder=\"Please input multiply numbers, seperate by space or comma\" onChange={validateInput} />\n                <button className=\"ant-btn\" onClick={handleSort}>Quick Sort</button>\n            </div>\n            <div className=\"container\">\n                <h5>Or you can upload txt file contains numbers, seperate by new line.</h5>\n                <input type=\"file\" id=\"fileToLoad\" onChange={onFileChange} ></input>\n                <button className=\"ant-btn\" onClick={loadFileAsText}>Quick Sort By File</button>\n            </div>\n            {quickSortFirstPivotResult && (\n                <div className=\"container \">\n                    <p>By First Pivot</p>\n                    <div className=\"container \">\n                        {quickSortFirstPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortFirstPivotResult[0])}</div>}\n                        {quickSortFirstPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortFirstPivotResult[1]}</div> : ''}\n                    </div>\n                </div>\n            )}\n            { quickSortLastPivotResult && (\n                <div className=\"container \">\n                    <p>By Last Pivot</p>\n                    <div className=\"container \">\n                        {quickSortLastPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortLastPivotResult[0])}</div>}\n                        {quickSortLastPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortLastPivotResult[1]}</div> : ''}\n                    </div>\n\n                </div>\n            )}\n            { quickSortMedianPivotResult && (\n                <div className=\"container \">\n                    <p>By Median-of-three Pivot</p>\n                    <div className=\"container \">\n                        {quickSortMedianPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortMedianPivotResult[0])}</div>}\n                        {quickSortMedianPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortMedianPivotResult[1]}</div> : ''}\n                    </div>\n\n                </div>\n            )}\n\n        </div>\n    );\n}\n","import React from \"react\";\nimport FastMultiplication from \"./algorithems/FastMultiplacation\";\nimport {\n    Switch,\n    Route,\n    Link,\n    useRouteMatch\n} from \"react-router-dom\";\nimport CountInversion from \"./algorithems/CountInversion\";\nimport './AlgorithmApp.scss';\nimport QuickSort from \"./algorithems/QuickSort\";\n\nexport default function AlgorithmApp() {\n    let { path, url } = useRouteMatch();\n    return (\n        <div className=\"algorithm-app container\">\n            <h3>Algorithem List</h3>\n            <ul>\n                <li>\n                    <Link to={`${url}/fastmultiply`}>Fast Multiply-Karatsuba Multiplication</Link>\n                </li>\n                <li>\n                    <Link to={`${url}/countinversion`}>Count inversions of numbers in list</Link>\n                </li>\n                <li>\n                    <Link to={`${url}/quicksort`}>Quick Sort</Link>\n                </li>\n            </ul>\n            <Switch>\n                <Route path={`${path}/fastmultiply`}>\n                    <FastMultiplication />\n                </Route>\n                <Route path={`${path}/countinversion`}>\n                    <CountInversion />\n                </Route>\n                <Route path={`${path}/quicksort`}>\n                    <QuickSort />\n                </Route>\n            </Switch>\n\n        </div>\n    );\n}\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Menu } from 'antd';\nimport MovieSearchApp from './moviesearch/MovieSearchApp';\nimport TodoApp from './todolist/TodoApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport { VideoCameraOutlined, EditOutlined, BookOutlined } from '@ant-design/icons';\nimport AlgorithmApp from './algorithm/AlgorithmApp';\nimport { Container } from 'react-bootstrap';\n/**TODO:\n * 3. refactor movie search app, refactor reducer out\n * 3. add more functions, ranks system\n * 3. click and see more information\n * 3. create global spinner */\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <h1>Chang's React Practise App</h1>\n        <Router>\n          <div>\n            <div className=\"menu-container\">\n              <Menu mode=\"horizontal\">\n                <Menu.Item icon={<VideoCameraOutlined />} key=\"moviesearch\">\n                  <Link to=\"/moviesearch\">Search Movie</Link>\n                </Menu.Item>\n                <Menu.Item icon={<EditOutlined />} key=\"todoappRedux\">\n                  <Link to=\"/todoapp\">To do App with local Redux</Link>\n                </Menu.Item>\n                <Menu.Item icon={<BookOutlined />} key=\"algorithm\">\n                  <Link to=\"/algorithm\">Algorithm</Link>\n                </Menu.Item>\n              </Menu>\n            </div>\n\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <div className=\"main-content\">\n              <Switch>\n                <Route path=\"/moviesearch\">\n                  <MovieSearchApp />\n                </Route>\n                <Route path=\"/todoapp\">\n                  <TodoApp />\n                </Route>\n                <Route path=\"/algorithm\">\n                  <AlgorithmApp />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { VISIBILITY_FILTERS } from \"../../constants/constants\"\nimport { SET_FILTER } from \"../actions/todoActionTypes\";\n\nconst initialState = VISIBILITY_FILTERS.ALL;\nconst visibilityFilter = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FILTER: {\n            return action.payload.filter;\n        }\n        default: {\n            return state;\n        }\n    }\n};\nexport default visibilityFilter;","import { ADD_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO } from \"./../actions/todoActionTypes\";\nconst initialState = {\n    allIds: [],\n    byIds: {}\n};\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { id, content } = action.payload;\n            return {\n                ...state,\n                allIds: [...state.allIds, id],\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        content,\n                        completed: false\n                    }\n                }\n            };\n        }\n        case UPDATE_TODO: {\n            const { id, value } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        content: value,\n                    }\n                }\n            }\n        }\n        case DELETE_TODO: {\n            const { id } = action.payload;\n            delete state.byIds[id];\n            return {\n                ...state,\n                allIds: state.allIds.filter(item => item !== id)\n            }\n        }\n        case TOGGLE_TODO: {\n            const { id } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        completed: !state.byIds[id].completed,\n                    }\n                }\n            };\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos, visibilityFilter });","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}