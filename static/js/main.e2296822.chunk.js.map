{"version":3,"sources":["components/moviesearch/Movie.js","components/moviesearch/Search.js","components/moviesearch/MovieSearchApp.js","redux/actions/todoActionTypes.js","redux/actions/todoActions.js","components/todolist/AddTodo.js","constants/constants.js","redux/selectors/selectors.js","components/todolist/Todo.js","components/todolist/TodoList.js","components/todolist/VisibilityFilters.js","components/todolist/TodoApp.js","utils/math.algorithm.js","components/algorithm/algorithems/FastMultiplacation.js","utils/algorithm.countinversion.js","components/algorithm/algorithems/CountInversion.js","utils/algorithm.quicksort.js","components/algorithm/algorithems/QuickSort.js","components/algorithm/AlgorithmApp.js","components/christmas-tree/ChristmasTree.js","components/App.js","reportWebVitals.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Movie","movie","poster","Poster","className","width","alt","Title","src","Year","Search","props","useState","searchValue","setSearchValue","callSearchFunction","e","preventDefault","search","value","onChange","target","onPressEnter","onClick","initialState","loading","movies","errorMessage","reducer","state","action","type","payload","MovieSearchApp","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","Response","Error","map","index","ADD_TODO","TOGGLE_TODO","SET_FILTER","UPDATE_TODO","DELETE_TODO","nextTodoId","AddTodo","updateInput","event","setState","input","handleAddTodo","addTodo","this","React","Component","connect","content","id","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","getTodosState","store","todos","getTodos","allIds","getTodoList","byIds","getTodoById","getTodosByCurrentVisibilityFilter","visibilityFilter","allTodos","filter","todo","completed","getTodosByVisibilityFilter","Todo","toggleTodo","updateTodo","deleteTodo","handleChange","bordered","onBlur","defaultValue","DeleteOutlined","updateTodoAction","deleteTodoAction","toggleTodoAction","newValue","length","activeFilter","setFilter","Object","keys","filterKey","currentFilter","cx","TodoApp","bigInt","require","karatsubaMul","a","b","a_str","toString","b_str","a_int","b_int","compare","multiply","m","Math","floor","min","a_int_high","substring","a_int_low","b_int_high","b_int_low","z2_str","z0_str","z1_str","add","minus","repeat","FastMultiplication","firstValue","setFirstValue","secondValue","setSecondValue","result","time","karaCalcResult","setKaraCalcResult","norCalcResult","setNorCalcResult","norCalcResultByBigInt","setNorCalcResultByBigInt","placeholder","t0","performance","now","t1","isNaN","countInversion","array","sortAndCount","list","half","ceil","firstHalf","slice","secondHalf","firstSortedArray","firstHalfCount","secondSortedArray","secondHalfCount","firstArray","secondArray","totalNum","reverseCount","i","j","push","countSplitInvAndSort","CountInversion","setList","file","setFile","setResult","split","ele","parseInt","val","reader","FileReader","readAsText","files","onload","JSON","stringify","quickSortFirstPivot","l","r","count","p","partitionByPivotAtFirst","quickSortLastPivot","swap","quickSortMedianPivot","midIndex","findMedianOfThree","pivot","leftIndex","rightIndex","QuickSort","quickSortLastPivotResult","setQuickSortLastPivotResult","quickSortFirstPivotResult","setQuickSortFirstPivotResult","quickSortMedianPivotResult","setQuickSortMedianPivotResult","Array","from","AlgorithmApp","useRouteMatch","path","url","to","ChristmasTree","blockNumStr","blockRowStr","current_last_row_ele_count","blockNum","blockRow","input_ele_num","last_block_last_row_ele_count","printCustomTree","printCustomLog","parse","number_block","number_row","last_row_ele_count","current_block_shift_number","customizeTriangle","linePrint","height","shift_number","basicSpace","line_number","total_height","treeSpaceBefore","treeStar","generateLeavies","number","generateLeaf","max","leaf","leaftypes","getRandomInt","random","document","getElementById","RowNum","drawCustomTree","ref","controls","autoPlay","App","Container","mode","Item","icon","SmileOutlined","VideoCameraOutlined","EditOutlined","BookOutlined","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","item","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2296822.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n    \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\n\r\nconst Movie = ({ movie }) => {\r\n    const poster =\r\n        movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n    return (\r\n        <div className=\"movie\">\r\n            <div>\r\n                <img\r\n                    width=\"300\"\r\n                    alt={`The movie titled: ${movie.Title}`}\r\n                    src={poster}\r\n                />\r\n            </div>\r\n            <p>{movie.Title} ({movie.Year})</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Movie;","import React, { useState } from \"react\";\r\nimport { Button, Input } from 'antd';\r\n\r\nconst Search = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const handleSearchInputChanges = (e) => {\r\n        setSearchValue(e.target.value);\r\n    }\r\n\r\n    const resetInputField = () => {\r\n        setSearchValue(\"\")\r\n    }\r\n\r\n    const callSearchFunction = (e) => {\r\n        if (searchValue) {\r\n            e.preventDefault();\r\n            props.search(searchValue);\r\n            resetInputField();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <Input\r\n                value={searchValue}\r\n                onChange={handleSearchInputChanges}\r\n                onPressEnter={callSearchFunction}\r\n            ></Input>\r\n            <Button onClick={callSearchFunction} >Search</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useReducer, useEffect } from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport Search from \"./Search\";\r\nimport './MovieSearchApp.scss';\r\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"; // you should replace this with yours\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    movies: [],\r\n    errorMessage: null\r\n};\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SEARCH_MOVIES_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMessage: null\r\n            };\r\n        case \"SEARCH_MOVIES_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movies: action.payload\r\n            };\r\n        case \"SEARCH_MOVIES_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst MovieSearchApp = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    // userEffect is a hook, get called after every update, accept two arguments, the function that we want to run, \r\n    // the array which will invoke function to run when its value get changed, if it is empty, it will run only once\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n        fetch(MOVIE_API_URL)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                dispatch({\r\n                    type: \"SEARCH_MOVIES_SUCCESS\",\r\n                    payload: jsonResponse.Search\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    const search = searchValue => {\r\n        dispatch({\r\n            type: \"SEARCH_MOVIES_REQUEST\"\r\n        });\r\n\r\n        fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                if (jsonResponse.Response === \"True\") {\r\n                    dispatch({\r\n                        type: \"SEARCH_MOVIES_SUCCESS\",\r\n                        payload: jsonResponse.Search\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: \"SEARCH_MOVIES_FAILURE\",\r\n                        payload: jsonResponse.Error\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const { movies, errorMessage, loading } = state;\r\n    return (\r\n        <div className=\"movie-search-container\">\r\n            <h2>Movie Search</h2>\r\n            <Search search={search} />\r\n\r\n            <div className=\"movies\">\r\n                {loading && !errorMessage ? (\r\n                    <span>loading...</span>\r\n                ) : errorMessage ? (\r\n                    <div className=\"errorMessage\">{errorMessage}</div>\r\n                ) : (\r\n                            movies.map((movie, index) => (\r\n                                <Movie key={`${index}-${movie.Title}`} movie={movie} />\r\n                            ))\r\n                        )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default MovieSearchApp;","export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";","import { ADD_TODO, UPDATE_TODO, TOGGLE_TODO, SET_FILTER, DELETE_TODO } from \"./todoActionTypes\";\r\n\r\nlet nextTodoId = 0;\r\nexport const addTodo = content => ({\r\n    type: ADD_TODO,\r\n    payload: {\r\n        id: ++nextTodoId,\r\n        content\r\n    }\r\n});\r\n\r\nexport const updateTodoAction = (id, value) => {\r\n    return {\r\n        type: UPDATE_TODO,\r\n        payload: {\r\n            id: id,\r\n            value: value\r\n        }\r\n    }\r\n};\r\nexport const deleteTodoAction = (id) => {\r\n    return {\r\n        type: DELETE_TODO,\r\n        payload: {\r\n            id: id\r\n        }\r\n    }\r\n};\r\n\r\nexport const toggleTodoAction = id => ({\r\n    type: TOGGLE_TODO,\r\n    payload: { id }\r\n})\r\n\r\nexport const setFilter = filter => ({\r\n    type: SET_FILTER,\r\n    payload: { filter }\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"./../../redux/actions/todoActions\";\r\nimport { Button, Input } from 'antd';\r\nclass AddTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { input: \"\" };\r\n    }\r\n\r\n    updateInput = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    };\r\n\r\n    handleAddTodo = () => {\r\n        if (this.state.input) {\r\n            this.props.addTodo(this.state.input);\r\n            this.setState({ input: \"\" });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"todo-container\">\r\n                <Input\r\n                    onChange={this.updateInput}\r\n                    onPressEnter={this.handleAddTodo}\r\n                    value={this.state.input}></Input>\r\n                <Button onClick={this.handleAddTodo}> Add New</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { addTodo })(AddTodo); // will bind addTodo action with this component as its props","export const VISIBILITY_FILTERS = {\r\n    ALL: \"all\",\r\n    COMPLETED: \"completed\",\r\n    INCOMPLETE: \"incomplete\"\r\n}","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\r\n\r\nexport const getTodosState = store => store.todos;\r\nexport const getTodoList = store =>\r\n    getTodosState(store) ? getTodosState(store).allIds : [];\r\n\r\nexport const getTodoById = (store, id) =>\r\n    getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\r\n\r\nexport const getTodos = store =>\r\n    getTodoList(store).map(id => getTodoById(store, id));\r\n\r\nexport const getVisibilityFilters = store => {\r\n    return store.visibilityFilter;\r\n};\r\n\r\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\r\n    const allTodos = getTodos(store);\r\n    switch (visibilityFilter) {\r\n        case VISIBILITY_FILTERS.COMPLETED:\r\n            return allTodos.filter(todo => todo.completed);\r\n        case VISIBILITY_FILTERS.INCOMPLETE:\r\n            return allTodos.filter(todo => !todo.completed);\r\n        case VISIBILITY_FILTERS.ALL:\r\n        default:\r\n            return allTodos;\r\n    }\r\n};\r\n\r\nexport const getTodosByCurrentVisibilityFilter = (store) => {\r\n    return getTodosByVisibilityFilter(store, store.visibilityFilter);\r\n}","import { GrCheckboxSelected, GrCheckbox } from 'react-icons/gr';\r\nimport { Input } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\n\r\nconst Todo = ({ todo, toggleTodo, updateTodo, deleteTodo }) => {\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.value) {\r\n            updateTodo(todo.id, e.target.value);\r\n        } else {\r\n            deleteTodo(todo.id);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"todo-item\" >\r\n            <span className=\"todo-checkbox\" onClick={() => toggleTodo(todo.id)}>\r\n                {todo && todo.completed ? <GrCheckboxSelected /> : <GrCheckbox />}\r\n            </span>\r\n            <Input bordered={false} onPressEnter={handleChange} onBlur={handleChange} defaultValue={todo.content} />\r\n            <DeleteOutlined onClick={() => deleteTodo(todo.id)} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Todo;","import { connect } from \"react-redux\";\r\nimport { getTodosByCurrentVisibilityFilter } from \"../../redux/selectors/selectors\";\r\nimport { updateTodoAction, toggleTodoAction, deleteTodoAction } from \"./../../redux/actions/todoActions\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, updateTodoAction, deleteTodoAction, toggleTodoAction }) => {\r\n    const updateTodo = (id, newValue) => {\r\n        updateTodoAction(id, newValue);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {todos && todos.length ?\r\n                todos.map((todo, index) => {\r\n                    return <Todo key={`todo-${todo.id}`} todo={todo} updateTodo={updateTodo}\r\n                        deleteTodo={deleteTodoAction}\r\n                        toggleTodo={toggleTodoAction}\r\n                    />;\r\n                })\r\n                : \"Nothing here!\"\r\n            }\r\n        </div>)\r\n};\r\n\r\nexport default connect(state => ({ todos: getTodosByCurrentVisibilityFilter(state) }),\r\n    { updateTodoAction, deleteTodoAction, toggleTodoAction }\r\n)(TodoList);","import { VISIBILITY_FILTERS } from \"../../constants/constants\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/todoActions\";\r\nimport { getVisibilityFilters } from \"../../redux/selectors/selectors\";\r\nimport cx from \"classnames\";\r\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\r\n    return (\r\n        <div className=\"visibility-filters\">\r\n            {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\r\n                const currentFilter = VISIBILITY_FILTERS[filterKey];\r\n                return (\r\n                    <span key={`visibility-filter-${currentFilter}`}\r\n                        className={cx(\r\n                            \"filter\",\r\n                            (currentFilter === activeFilter) && \"filter-active\"\r\n                        )}\r\n                        onClick={() => {\r\n                            setFilter(currentFilter)\r\n                        }}\r\n                    >\r\n                        {currentFilter}\r\n                    </span>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(state => ({ activeFilter: getVisibilityFilters(state) }), { setFilter })(VisibilityFilters);","import React from \"react\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport './TodoApp.scss';\r\nimport TodoList from \"./TodoList\";\r\nimport VisibilityFilters from \"./VisibilityFilters\";\r\n\r\nexport default function TodoApp() {\r\n    return (\r\n        <div className=\"todo-app\">\r\n            <h1>Todo List</h1>\r\n            <AddTodo />\r\n            <VisibilityFilters />\r\n            <TodoList />\r\n\r\n        </div>\r\n    );\r\n}\r\n","var bigInt = require(\"big-integer\");\r\n\r\n\r\n/**input string, output string\r\n */\r\nexport function karatsubaMul(a, b) {\r\n    const base = 10;\r\n    const a_str = a.toString();\r\n    const b_str = b.toString();\r\n    const a_int = bigInt(a_str);\r\n    const b_int = bigInt(b_str);\r\n\r\n    if (a_int.compare(base) === -1 || b_int.compare(base) === -1) {\r\n        return a_int.multiply(b_int).toString();\r\n    } else {\r\n\r\n        const m = Math.floor(Math.min(a_str.length, b_str.length) / 2);\r\n        var a_int_high = bigInt(a_str.substring(0, a_str.length - m));\r\n        var a_int_low = bigInt(a_str.substring(a_str.length - m, a_str.length));\r\n        var b_int_high = bigInt(b_str.substring(0, b_str.length - m));\r\n        var b_int_low = bigInt(b_str.substring(b_str.length - m, b_str.length));\r\n\r\n        var z2_str = karatsubaMul(a_int_high, b_int_high);\r\n        var z0_str = karatsubaMul(a_int_low, b_int_low);\r\n        var z1_str = karatsubaMul(a_int_low.add(a_int_high), b_int_low.add(b_int_high));\r\n        z1_str = bigInt(z1_str).minus(bigInt(z2_str)).minus(bigInt(z0_str)).toString();\r\n\r\n        z2_str += '0'.repeat(m * 2)\r\n        z1_str += '0'.repeat(m)\r\n        var r = bigInt(z2_str).add(bigInt(z1_str)).add(bigInt(z0_str));\r\n        return r.toString();\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport function multiplyByBigInitLib(a, b) {\r\n    return bigInt(a).multiply(bigInt(b)).toString();\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input } from 'antd';\r\nimport { karatsubaMul, multiplyByBigInitLib } from \"../../../utils/math.algorithm\";\r\nexport default function FastMultiplication() {\r\n    const [firstValue, setFirstValue] = useState(null);\r\n    const [secondValue, setSecondValue] = useState(null);\r\n    const [karaCalcResult, setKaraCalcResult] = useState({ result: null, time: null });\r\n    const [norCalcResult, setNorCalcResult] = useState({ result: null, time: null });\r\n    const [norCalcResultByBigInt, setNorCalcResultByBigInt] = useState({ result: null, time: null });\r\n    const handleFirst = (e) => {\r\n        if (e.target.value) {\r\n            setFirstValue(e.target.value);\r\n        }\r\n    }\r\n    const handleSecond = (e) => {\r\n        if (e.target.value) {\r\n            setSecondValue(e.target.value);\r\n        }\r\n    }\r\n    const handleKaratsubaMul = (e) => {\r\n        const t0 = performance.now();\r\n        const result = karatsubaMul(firstValue, secondValue);\r\n        const t1 = performance.now();\r\n        setKaraCalcResult({ result: result, time: t1 - t0 });\r\n    }\r\n\r\n    const handleNormalMul = (e) => {\r\n        const t0 = performance.now();\r\n        const result = firstValue * secondValue;\r\n        const t1 = performance.now();\r\n        setNorCalcResult({ result: result, time: t1 - t0 });\r\n    }\r\n\r\n    const handleNormalMulWithBigInt = (e) => {\r\n        const t0 = performance.now();\r\n        const result = multiplyByBigInitLib(firstValue, secondValue);\r\n        const t1 = performance.now();\r\n        setNorCalcResultByBigInt({ result: result, time: t1 - t0 });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <div className=\"container\"  >\r\n                <div className=\"container\" >\r\n                    <Input placeholder=\"Input first number\" onChange={handleFirst} ></Input>\r\n                    <Input placeholder=\"Input second number\" onChange={handleSecond}></Input>\r\n                </div>\r\n                <div className=\"container\" >\r\n                    <Button onClick={handleKaratsubaMul}>Karatsuba Multiply</Button>\r\n                    <Button onClick={handleNormalMul}>Normal Multiply By JS *</Button>\r\n                    <Button onClick={handleNormalMulWithBigInt}>Normal Multiply By Big Int Library</Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\" >\r\n                <div>Karatsuba Result: {karaCalcResult.result ? karaCalcResult.result : 'None'}</div>\r\n                <div>Karatsuba Calculate Time: {karaCalcResult.time ? karaCalcResult.time : 'None'}</div>\r\n                <div>Normal Result by using *: {norCalcResult.result ? norCalcResult.result : 'None'}</div>\r\n                <div>Normal Calculate Time by using *: {isNaN(norCalcResult.time )? 'None': norCalcResult.time }</div>\r\n                <div>Normal Result by using big int library directly: {norCalcResultByBigInt.result ? norCalcResultByBigInt.result : 'None'}</div>\r\n                <div>Normal Calculate Time by using big int library directly: {isNaN(norCalcResultByBigInt.time )? 'None': norCalcResultByBigInt.time }</div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","export function countInversion(array) {\r\n\r\n    return sortAndCount(array);\r\n}\r\n\r\nfunction sortAndCount(list) {\r\n    if (list.length < 2) {\r\n        const count = 0;\r\n        return [list, count];\r\n    }\r\n    const half = Math.ceil(list.length / 2);\r\n    var firstHalf = list.slice(0, half);\r\n    var secondHalf = list.slice(half, list.length);\r\n    const [firstSortedArray, firstHalfCount] = sortAndCount(firstHalf);\r\n    const [secondSortedArray, secondHalfCount] = sortAndCount(secondHalf);\r\n    const [sortedCombine, reverseCount] = countSplitInvAndSort(firstSortedArray, secondSortedArray, list.length);\r\n    const totalCount = firstHalfCount + secondHalfCount + reverseCount;\r\n    return [sortedCombine, totalCount];\r\n\r\n}\r\n\r\nfunction countSplitInvAndSort(firstArray, secondArray, totalNum) {\r\n    var result = [];\r\n    var reverseCount = 0;\r\n    var i = 0;\r\n    var j = 0;\r\n\r\n    for (var index = 0; index < totalNum; index++) {\r\n        if (i < firstArray.length && j < secondArray.length) {\r\n            if (firstArray[i] <= secondArray[j]) {\r\n                result.push(firstArray[i]);\r\n                i++;\r\n            } else {\r\n                result.push(secondArray[j]);\r\n                reverseCount += firstArray.length - i;\r\n                j++;\r\n            }\r\n        } else if (i < firstArray.length) {\r\n            // first array not empty\r\n            result.push(firstArray[i]);\r\n            i++;\r\n        } else {\r\n            // second array not empty\r\n            result.push(secondArray[j]);\r\n            j++;\r\n        }\r\n\r\n    }\r\n    return [result, reverseCount];\r\n}","import React, { useState } from \"react\";\r\nimport { Input } from 'antd';\r\nimport { countInversion } from \"../../../utils/algorithm.countinversion\";\r\nexport default function CountInversion() {\r\n    // todo: add other algorithem to count inversion, and do time comparision\r\n    const [list, setList] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n    const [result, setResult] = useState(null);\r\n    const validateInput = (e) => {\r\n        if (e.target.value) {\r\n\r\n            setList(e.target.value);\r\n        }\r\n    }\r\n    const handleInput = (e) => {\r\n        var array = list.split(/[ ,]+/);;\r\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\r\n        setResult(countInversion(array));\r\n    }\r\n    const onFileChange = (e) => {\r\n        var reader = new FileReader();\r\n        reader.readAsText(e.target.files[0], \"UTF-8\");\r\n\r\n        reader.onload = function () {\r\n            var content = reader.result;\r\n            setFile(content);\r\n        };\r\n\r\n    };\r\n\r\n    const loadFileAsText = (e) => {\r\n        var array = file.split(/[ ,\\n]+/);;\r\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\r\n        setResult(countInversion(array));\r\n    }\r\n    return (\r\n        <div className=\"count-inversion-app container\">\r\n            <h4>Count Inversion</h4>\r\n            <div className=\"container\">\r\n                <h5>You can input multiple numbers in below input, and click button to count inversion.</h5>\r\n                <Input placeholder=\"Please input multiply numbers, seperate by space or comma\" onChange={validateInput} />\r\n                <button className=\"ant-btn\" onClick={handleInput}>Count Inversion By Input</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>Or you can upload txt file contains numbers, seperate by new line.</h5>\r\n                <input type=\"file\" id=\"fileToLoad\" onChange={onFileChange} ></input>\r\n                <button className=\"ant-btn\" onClick={loadFileAsText}>Count Inversion By File</button>\r\n            </div>\r\n\r\n            <div className=\"container \">\r\n                {result && result[0] ? <div className=\"container display-text\">Sorted Array is {JSON.stringify(result[0])}</div> : ''}\r\n                {result && result[1] ? <div className=\"container\">Inversion Count is {result[1]}</div> : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/** Count is couting how many times we have to do compare operation, the less, the better, based on the pivot\r\n * for example, if array is [0,1,3,4,5],we always chose last element as pivot, or the first, it will has worst behavior\r\n * it will be n-1 + n-2 + ...+ 1 comparison , n^2 big O\r\n * best secnario is nlogn big O\r\n */\r\n\r\nexport function quickSortFirstPivot(array, l, r, count) {\r\n\r\n    if (l >= r) { return [array, count]; }\r\n    let p;\r\n    // chose a pivot, rearrange array, less than it move to left, greater than it move to right\r\n\r\n    // chose first as pivot , then put it at last\r\n    [p, array, count] = partitionByPivotAtFirst(array, l, r, count);\r\n    [array, count] = quickSortFirstPivot(array, l, p - 1, count);\r\n    [array, count] = quickSortFirstPivot(array, p + 1, r, count);\r\n    return [array, count];\r\n\r\n}\r\nexport function quickSortLastPivot(array, l, r, count) {\r\n\r\n    if (l >= r) { return [array, count]; }\r\n    swap(array, l, r);\r\n    let p;\r\n    [p, array, count] = partitionByPivotAtFirst(array, l, r, count);\r\n    [array, count] = quickSortLastPivot(array, l, p - 1, count);\r\n    [array, count] = quickSortLastPivot(array, p + 1, r, count);\r\n\r\n    return [array, count];\r\n}\r\n\r\nexport function quickSortMedianPivot(array, l, r, count) {\r\n    if (l >= r) { return [array, count]; }\r\n    let p;\r\n    // chose a pivot, rearrange array, less than it move to left, greater than it move to right\r\n    let midIndex = findMedianOfThree(array, l, r);\r\n    swap(array, midIndex, l);\r\n    [p, array, count] = partitionByPivotAtFirst(array, l, r, count);\r\n    [array, count] = quickSortMedianPivot(array, l, p - 1, count);\r\n    [array, count] = quickSortMedianPivot(array, p + 1, r, count);\r\n\r\n    return [array, count];\r\n}\r\n\r\nfunction findMedianOfThree(array, l, r) {\r\n    let midIndex = parseInt((r + l) / 2);\r\n    if (array[l] < array[midIndex]) {\r\n        if (array[midIndex] < array[r]) {\r\n            return midIndex;\r\n        } else if (array[l] < array[r]) {\r\n            return r;\r\n        } else {\r\n            return l;\r\n        }\r\n    } else {\r\n        if (array[l] < array[r]) {\r\n            return l;\r\n        } else if (array[midIndex] < array[r]) {\r\n            return r;\r\n        } else {\r\n            return midIndex;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {number[]} array input array for partition\r\n * @param {number} l start index of array to be partition\r\n * @param {number} r end index of array to be partition\r\n * @param {number} pivotIndex index of pivot for partition\r\n * @param {number} count the count of operation of comparison\r\n * @returns {[number,number[],number]} [pivotIndex, array, count] , pivotIndex is the index of pivot after partition\r\n */\r\nfunction partitionByPivotAtFirst(array, l, r, count) {\r\n    // console.log(`partition at: l: ${l} r : ${r}`);\r\n    let pivot = array[l];\r\n    let i = l + 1;\r\n    for (let j = l + 1; j <= r; j++) {\r\n        if (array[j] < pivot) {\r\n            swap(array, i, j);\r\n            i++;\r\n        }\r\n    }\r\n    swap(array, i - 1, l);\r\n    count = count + r - l;\r\n    return [i - 1, array, count];\r\n}\r\n\r\nfunction swap(array, leftIndex, rightIndex) {\r\n    [array[leftIndex], array[rightIndex]] = [array[rightIndex], array[leftIndex]];\r\n}","import React, { useState } from \"react\";\r\nimport { Input } from 'antd';\r\nimport { quickSortFirstPivot, quickSortLastPivot, quickSortMedianPivot } from \"../../../utils/algorithm.quicksort\";\r\nexport default function QuickSort() {\r\n    // todo: add other algorithem to count inversion, and do time comparision\r\n    const [list, setList] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n    const [quickSortLastPivotResult, setQuickSortLastPivotResult] = useState(null); //[result, count]\r\n    const [quickSortFirstPivotResult, setQuickSortFirstPivotResult] = useState(null); //[result, count]\r\n    const [quickSortMedianPivotResult, setQuickSortMedianPivotResult] = useState(null); //[result, count]\r\n    const validateInput = (e) => {\r\n        if (e.target.value) {\r\n            setList(e.target.value);\r\n        }\r\n    }\r\n    const handleSort = (e) => {\r\n        var array = list.split(/[ ,]+/);;\r\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\r\n        setQuickSortLastPivotResult(quickSortLastPivot(Array.from(array), 0, array.length - 1, 0));\r\n        setQuickSortFirstPivotResult(quickSortFirstPivot(Array.from(array), 0, array.length - 1, 0));\r\n        setQuickSortMedianPivotResult(quickSortMedianPivot(Array.from(array), 0, array.length - 1, 0));\r\n    }\r\n\r\n    const onFileChange = (e) => {\r\n        var reader = new FileReader();\r\n        reader.readAsText(e.target.files[0], \"UTF-8\");\r\n        reader.onload = function () {\r\n            var content = reader.result;\r\n            setFile(content);\r\n        };\r\n\r\n    };\r\n\r\n    const loadFileAsText = (e) => {\r\n        var array = file.split(/[ ,\\n]+/);\r\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\r\n        setQuickSortLastPivotResult(quickSortLastPivot(Array.from(array), 0, array.length - 1, 0));\r\n        setQuickSortFirstPivotResult(quickSortFirstPivot(Array.from(array), 0, array.length - 1, 0));\r\n        setQuickSortMedianPivotResult(quickSortMedianPivot(Array.from(array), 0, array.length - 1, 0));\r\n    }\r\n    return (\r\n        <div className=\"count-inversion-app container\">\r\n            <h4>Quick Sort</h4>\r\n            <div className=\"container\">\r\n                <h5>You can input multiple numbers in below input, and click button to quick sort.</h5>\r\n                <Input placeholder=\"Please input multiply numbers, seperate by space or comma\" onChange={validateInput} />\r\n                <button className=\"ant-btn\" onClick={handleSort}>Quick Sort</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>Or you can upload txt file contains numbers, seperate by new line.</h5>\r\n                <input type=\"file\" id=\"fileToLoad\" onChange={onFileChange} ></input>\r\n                <button className=\"ant-btn\" onClick={loadFileAsText}>Quick Sort By File</button>\r\n            </div>\r\n            {quickSortFirstPivotResult && (\r\n                <div className=\"container \">\r\n                    <p>By First Pivot</p>\r\n                    <div className=\"container \">\r\n                        {quickSortFirstPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortFirstPivotResult[0])}</div>}\r\n                        {quickSortFirstPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortFirstPivotResult[1]}</div> : ''}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            { quickSortLastPivotResult && (\r\n                <div className=\"container \">\r\n                    <p>By Last Pivot</p>\r\n                    <div className=\"container \">\r\n                        {quickSortLastPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortLastPivotResult[0])}</div>}\r\n                        {quickSortLastPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortLastPivotResult[1]}</div> : ''}\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n            { quickSortMedianPivotResult && (\r\n                <div className=\"container \">\r\n                    <p>By Median-of-three Pivot</p>\r\n                    <div className=\"container \">\r\n                        {quickSortMedianPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortMedianPivotResult[0])}</div>}\r\n                        {quickSortMedianPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortMedianPivotResult[1]}</div> : ''}\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport FastMultiplication from \"./algorithems/FastMultiplacation\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\nimport CountInversion from \"./algorithems/CountInversion\";\r\nimport './AlgorithmApp.scss';\r\nimport QuickSort from \"./algorithems/QuickSort\";\r\n\r\nexport default function AlgorithmApp() {\r\n    let { path, url } = useRouteMatch();\r\n    return (\r\n        <div className=\"algorithm-app container\">\r\n            <h3>Algorithem List</h3>\r\n            <ul>\r\n                <li>\r\n                    <Link to={`${url}/fastmultiply`}>Fast Multiply-Karatsuba Multiplication</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/countinversion`}>Count inversions of numbers in list</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/quicksort`}>Quick Sort</Link>\r\n                </li>\r\n            </ul>\r\n            <Switch>\r\n                <Route path={`${path}/fastmultiply`}>\r\n                    <FastMultiplication />\r\n                </Route>\r\n                <Route path={`${path}/countinversion`}>\r\n                    <CountInversion />\r\n                </Route>\r\n                <Route path={`${path}/quicksort`}>\r\n                    <QuickSort />\r\n                </Route>\r\n            </Switch>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./ChristmasTree.scss\";\r\nimport parse from \"html-react-parser\";\r\nclass ChristmasTree extends React.Component {\r\n  // make submit work, form more beautiful 闪不同颜色\r\n  // 让音乐自动播放\r\n  // intergrate with\r\n\r\n  drawCustomTree(blockNumStr, blockRowStr) {\r\n    let result = '<div className=\"inner_container\">';\r\n    let blockNum = parseInt(blockNumStr);\r\n    let blockRow = parseInt(blockRowStr);\r\n    let input_ele_num = 1;\r\n    let current_last_row_ele_count;\r\n    for (let i = 0; i < blockNum; i++) {\r\n      current_last_row_ele_count = input_ele_num + 2 * (blockRow - 1);\r\n      input_ele_num =\r\n        current_last_row_ele_count - 4 > 0 ? current_last_row_ele_count - 4 : 1; // the new block initial row count is 4 less than last row number in last block\r\n    }\r\n    let last_block_last_row_ele_count = current_last_row_ele_count;\r\n\r\n    result += this.printCustomTree(\r\n      blockNum,\r\n      blockRow,\r\n      last_block_last_row_ele_count\r\n    );\r\n    result += this.printCustomLog(last_block_last_row_ele_count);\r\n    return parse(result + \"</div>\");\r\n  }\r\n\r\n  // number of block going to print, the number of rows in each block\r\n  printCustomTree(number_block, number_row, last_block_last_row_ele_count) {\r\n    let result = \"\";\r\n    let init_row_ele_count = 1;\r\n    let input_ele_num = init_row_ele_count;\r\n    input_ele_num = init_row_ele_count;\r\n    for (let i = 0; i < number_block; i++) {\r\n      let last_row_ele_count = input_ele_num + 2 * (number_row - 1);\r\n      let current_block_shift_number =\r\n        (last_block_last_row_ele_count - last_row_ele_count) / 2;\r\n      result += this.customizeTriangle(\r\n        number_row,\r\n        input_ele_num,\r\n        current_block_shift_number\r\n      );\r\n      input_ele_num = last_row_ele_count - 4 > 0 ? last_row_ele_count - 4 : 1; // the new block initial row count is 4 less than last row number in last block\r\n    }\r\n    return result;\r\n  }\r\n\r\n  printCustomLog(count) {\r\n    let result = \"\";\r\n    let basicStar = '<span className=\"treeLeaf\">*</span>';\r\n    let basicSpace = '<span className=\"treeLeaf\">&nbsp;</span>';\r\n    let logSpace = basicSpace.repeat((count - 1) / 4);\r\n    let logStar = basicStar.repeat((count + 1) / 2);\r\n    let linePrint = logSpace + logStar;\r\n    for (let i = 0; i <= (count + 1) / 4; i++) {\r\n      result += linePrint + \"<br>\\n\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // height is the row numbe of the triangle, input_ele_num is the first\r\n  customizeTriangle(height, input_ele_num, shift_number = 0) {\r\n    let result = \"\";\r\n    let basicSpace = '<span className=\"treeLeaf\">&nbsp;</span>';\r\n    // line number is (input_ele_num +1)/2, line number start from 1\r\n    let line_number = (input_ele_num + 1) / 2;\r\n    let total_height = height + line_number - 1;\r\n    for (let i = line_number; i <= total_height; i++) {\r\n      let treeSpaceBefore = basicSpace.repeat(total_height - i + shift_number);\r\n      let treeStar = this.generateLeavies(2 * i - 1);\r\n      result += treeSpaceBefore + treeStar + \"<br/>\\n\";\r\n    }\r\n    return result;\r\n  }\r\n\r\n  generateLeavies(number) {\r\n    let treeStar = \"\";\r\n    for (let j = 0; j < number; j++) {\r\n      treeStar = treeStar + this.generateLeaf(4);\r\n    }\r\n    return treeStar;\r\n  }\r\n\r\n  // less max, more decoration.\r\n  generateLeaf(max) {\r\n    let leaftypes = [\"☆\", \"*\", \"⛣\", \"❦\", \"◍\", \"☃\", \"♬\", \"✵\"];\r\n    let count = leaftypes.length;\r\n    let randomnumber = this.getRandomInt(0, max);\r\n    let leaf;\r\n    if (randomnumber === 1) {\r\n      let randomStyle = this.getRandomInt(1, 3);\r\n      leaf =\r\n        '<span className=\"treeLeaf blink' +\r\n        randomStyle +\r\n        '\">' +\r\n        leaftypes[this.getRandomInt(0, count - 1) % count] +\r\n        \"</span>\";\r\n    } else {\r\n      leaf = '<span className=\"treeLeaf\">' + leaftypes[1] + \"</span>\";\r\n    }\r\n    return leaf;\r\n  }\r\n\r\n  /**\r\n   * Returns a random integer between min (inclusive) and max (inclusive).\r\n   * The value is no lower than min (or the next integer greater than min\r\n   * if min isn't an integer) and no greater than max (or the next integer\r\n   * lower than max if max isn't an integer).\r\n   * Using Math.round() will give you a non-uniform distribution!\r\n   */\r\n  getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  reDraw() {\r\n    let blockNum = document.getElementById(\"blockNum\").value;\r\n    let RowNum = document.getElementById(\"RowNum\").value;\r\n    this.drawCustomTree(blockNum, RowNum);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"outer_container\">\r\n        <h1>Hello, christmas tree</h1>\r\n        <audio ref=\"audio_tag\" src=\"https://www.thewavsite.com/Christmas/All%20I%20Want%20for%20Christmas%20for%20Is%20You%20-%20Mariah%20Carey.wav\" controls autoPlay/>\r\n        <div className=\"christmastree_container\">\r\n          {this.drawCustomTree(3, 8)}\r\n        </div>\r\n\r\n      \r\n\r\n        {/* <div>\r\n            <form onSubmit={this.reDraw}>\r\n              <label htmlFor=\"blockNum\">Block Number: </label>\r\n              <input type=\"text\" id=\"blockNum\" />\r\n              <br />\r\n              <label htmlFor=\"RowNum\">Row Number: </label>\r\n              <input type=\"text\" id=\"RowNum\" />\r\n              <br />\r\n              <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n          </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChristmasTree;\r\n","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Menu } from 'antd';\r\nimport MovieSearchApp from './moviesearch/MovieSearchApp';\r\nimport TodoApp from './todolist/TodoApp';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport { VideoCameraOutlined, EditOutlined, BookOutlined, SmileOutlined } from '@ant-design/icons';\r\nimport AlgorithmApp from './algorithm/AlgorithmApp';\r\nimport { Container } from 'react-bootstrap';\r\nimport ChristmasTree from './christmas-tree/ChristmasTree';\r\n/**TODO:\r\n * 3. refactor movie search app, refactor reducer out\r\n * 3. add more functions, ranks system\r\n * 3. click and see more information\r\n * 3. create global spinner */\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Chang's React Practise App</h1>\r\n        <Router>\r\n          <div>\r\n            <div className=\"menu-container\">\r\n              <Menu mode=\"horizontal\">\r\n              <Menu.Item icon={<SmileOutlined />} key=\"christmastree\">\r\n                  <Link to=\"/christmastree\">Happy Christmas!</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<VideoCameraOutlined />} key=\"moviesearch\">\r\n                  <Link to=\"/moviesearch\">Search Movie</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<EditOutlined />} key=\"todoappRedux\">\r\n                  <Link to=\"/todoapp\">To do App with local Redux</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<BookOutlined />} key=\"algorithm\">\r\n                  <Link to=\"/algorithm\">Algorithm</Link>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </div>\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n            <div className=\"main-content\">\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <ChristmasTree />\r\n                </Route>\r\n                <Route path=\"/christmastree\">\r\n                  <ChristmasTree />\r\n                </Route>\r\n                <Route path=\"/moviesearch\">\r\n                  <MovieSearchApp />\r\n                </Route>\r\n                <Route path=\"/todoapp\">\r\n                  <TodoApp />\r\n                </Route>\r\n                <Route path=\"/algorithm\">\r\n                  <AlgorithmApp />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { VISIBILITY_FILTERS } from \"../../constants/constants\"\r\nimport { SET_FILTER } from \"../actions/todoActionTypes\";\r\n\r\nconst initialState = VISIBILITY_FILTERS.ALL;\r\nconst visibilityFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER: {\r\n            return action.payload.filter;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport default visibilityFilter;","import { ADD_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO } from \"./../actions/todoActionTypes\";\r\nconst initialState = {\r\n    allIds: [],\r\n    byIds: {}\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TODO: {\r\n            const { id, content } = action.payload;\r\n            return {\r\n                ...state,\r\n                allIds: [...state.allIds, id],\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        content,\r\n                        completed: false\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case UPDATE_TODO: {\r\n            const { id, value } = action.payload;\r\n            return {\r\n                ...state,\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        ...state.byIds[id],\r\n                        content: value,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case DELETE_TODO: {\r\n            const { id } = action.payload;\r\n            delete state.byIds[id];\r\n            return {\r\n                ...state,\r\n                allIds: state.allIds.filter(item => item !== id)\r\n            }\r\n        }\r\n        case TOGGLE_TODO: {\r\n            const { id } = action.payload;\r\n            return {\r\n                ...state,\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        ...state.byIds[id],\r\n                        completed: !state.byIds[id].completed,\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\nimport todos from \"./todos\";\r\n\r\nexport default combineReducers({ todos, visibilityFilter });","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./redux/store\";\r\n\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}