[{"/Users/changlyu/Projects/website/src/index.js":"1","/Users/changlyu/Projects/website/src/reportWebVitals.js":"2","/Users/changlyu/Projects/website/src/components/App.js":"3","/Users/changlyu/Projects/website/src/redux/store.js":"4","/Users/changlyu/Projects/website/src/components/moviesearch/MovieSearchApp.js":"5","/Users/changlyu/Projects/website/src/components/algorithm/AlgorithmApp.js":"6","/Users/changlyu/Projects/website/src/components/todolist/TodoApp.js":"7","/Users/changlyu/Projects/website/src/redux/reducers/index.js":"8","/Users/changlyu/Projects/website/src/components/moviesearch/Movie.js":"9","/Users/changlyu/Projects/website/src/components/moviesearch/Search.js":"10","/Users/changlyu/Projects/website/src/components/todolist/TodoList.js":"11","/Users/changlyu/Projects/website/src/components/todolist/AddTodo.js":"12","/Users/changlyu/Projects/website/src/components/todolist/VisibilityFilters.js":"13","/Users/changlyu/Projects/website/src/components/algorithm/algorithems/FastMultiplacation.js":"14","/Users/changlyu/Projects/website/src/components/algorithm/algorithems/CountInversion.js":"15","/Users/changlyu/Projects/website/src/components/algorithm/algorithems/QuickSort.js":"16","/Users/changlyu/Projects/website/src/components/todolist/Todo.js":"17","/Users/changlyu/Projects/website/src/redux/actions/todoActions.js":"18","/Users/changlyu/Projects/website/src/redux/selectors/selectors.js":"19","/Users/changlyu/Projects/website/src/utils/algorithm.quicksort.js":"20","/Users/changlyu/Projects/website/src/utils/logger.js":"21","/Users/changlyu/Projects/website/src/utils/math.algorithm.js":"22","/Users/changlyu/Projects/website/src/utils/algorithm.countinversion.js":"23","/Users/changlyu/Projects/website/src/constants/constants.js":"24","/Users/changlyu/Projects/website/src/redux/actions/todoActionTypes.js":"25","/Users/changlyu/Projects/website/src/redux/reducers/todos.js":"26","/Users/changlyu/Projects/website/src/redux/reducers/visibilityFilter.js":"27"},{"size":618,"mtime":1637364038067,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1637352382456,"results":"30","hashOfConfig":"29"},{"size":2061,"mtime":1637367479267,"results":"31","hashOfConfig":"29"},{"size":199,"mtime":1637352382456,"results":"32","hashOfConfig":"29"},{"size":3114,"mtime":1637352382449,"results":"33","hashOfConfig":"29"},{"size":1351,"mtime":1637352382448,"results":"34","hashOfConfig":"29"},{"size":397,"mtime":1637352382450,"results":"35","hashOfConfig":"29"},{"size":182,"mtime":1637352382456,"results":"36","hashOfConfig":"29"},{"size":639,"mtime":1637352382449,"results":"37","hashOfConfig":"29"},{"size":865,"mtime":1637352382450,"results":"38","hashOfConfig":"29"},{"size":1027,"mtime":1637352382450,"results":"39","hashOfConfig":"29"},{"size":1034,"mtime":1637352382450,"results":"40","hashOfConfig":"29"},{"size":1182,"mtime":1637352382450,"results":"41","hashOfConfig":"29"},{"size":3118,"mtime":1637352382449,"results":"42","hashOfConfig":"29"},{"size":2346,"mtime":1637352382449,"results":"43","hashOfConfig":"29"},{"size":4573,"mtime":1637352382449,"results":"44","hashOfConfig":"29"},{"size":856,"mtime":1637352382450,"results":"45","hashOfConfig":"29"},{"size":729,"mtime":1637352382455,"results":"46","hashOfConfig":"29"},{"size":1087,"mtime":1637352382456,"results":"47","hashOfConfig":"29"},{"size":3137,"mtime":1637352382457,"results":"48","hashOfConfig":"29"},{"size":414,"mtime":1637352382457,"results":"49","hashOfConfig":"29"},{"size":1346,"mtime":1637352382457,"results":"50","hashOfConfig":"29"},{"size":1546,"mtime":1637352382457,"results":"51","hashOfConfig":"29"},{"size":110,"mtime":1637352382450,"results":"52","hashOfConfig":"29"},{"size":201,"mtime":1637352382455,"results":"53","hashOfConfig":"29"},{"size":1669,"mtime":1637352382456,"results":"54","hashOfConfig":"29"},{"size":429,"mtime":1637352382456,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m4n0kn",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/changlyu/Projects/website/src/index.js",[],"/Users/changlyu/Projects/website/src/reportWebVitals.js",[],"/Users/changlyu/Projects/website/src/components/App.js",[],"/Users/changlyu/Projects/website/src/redux/store.js",[],"/Users/changlyu/Projects/website/src/components/moviesearch/MovieSearchApp.js",[],"/Users/changlyu/Projects/website/src/components/algorithm/AlgorithmApp.js",[],"/Users/changlyu/Projects/website/src/components/todolist/TodoApp.js",[],"/Users/changlyu/Projects/website/src/redux/reducers/index.js",[],"/Users/changlyu/Projects/website/src/components/moviesearch/Movie.js",[],"/Users/changlyu/Projects/website/src/components/moviesearch/Search.js",[],"/Users/changlyu/Projects/website/src/components/todolist/TodoList.js",["113"],"import { connect } from \"react-redux\";\nimport { getTodos, getTodosByCurrentVisibilityFilter } from \"../../redux/selectors/selectors\";\nimport { updateTodoAction, toggleTodoAction, deleteTodoAction } from \"./../../redux/actions/todoActions\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, updateTodoAction, deleteTodoAction, toggleTodoAction }) => {\n    const updateTodo = (id, newValue) => {\n        updateTodoAction(id, newValue);\n    }\n\n    return (\n        <div>\n            {todos && todos.length ?\n                todos.map((todo, index) => {\n                    return <Todo key={`todo-${todo.id}`} todo={todo} updateTodo={updateTodo}\n                        deleteTodo={deleteTodoAction}\n                        toggleTodo={toggleTodoAction}\n                    />;\n                })\n                : \"Nothing here!\"\n            }\n        </div>)\n};\n\nexport default connect(state => ({ todos: getTodosByCurrentVisibilityFilter(state) }),\n    { updateTodoAction, deleteTodoAction, toggleTodoAction }\n)(TodoList);","/Users/changlyu/Projects/website/src/components/todolist/AddTodo.js",[],"/Users/changlyu/Projects/website/src/components/todolist/VisibilityFilters.js",[],"/Users/changlyu/Projects/website/src/components/algorithm/algorithems/FastMultiplacation.js",[],"/Users/changlyu/Projects/website/src/components/algorithm/algorithems/CountInversion.js",[],"/Users/changlyu/Projects/website/src/components/algorithm/algorithems/QuickSort.js",["114"],"import React, { useState } from \"react\";\nimport { Input } from 'antd';\nimport { quickSortFirstPivot, quickSortLastPivot, quickSortMedianPivot } from \"../../../utils/algorithm.quicksort\";\nimport { logger } from \"../../../utils/logger\";\nexport default function QuickSort() {\n    // todo: add other algorithem to count inversion, and do time comparision\n    const [list, setList] = useState(null);\n    const [file, setFile] = useState(null);\n    const [quickSortLastPivotResult, setQuickSortLastPivotResult] = useState(null); //[result, count]\n    const [quickSortFirstPivotResult, setQuickSortFirstPivotResult] = useState(null); //[result, count]\n    const [quickSortMedianPivotResult, setQuickSortMedianPivotResult] = useState(null); //[result, count]\n    const validateInput = (e) => {\n        if (e.target.value) {\n            setList(e.target.value);\n        }\n    }\n    const handleSort = (e) => {\n        var array = list.split(/[ ,]+/);;\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\n        setQuickSortLastPivotResult(quickSortLastPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortFirstPivotResult(quickSortFirstPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortMedianPivotResult(quickSortMedianPivot(Array.from(array), 0, array.length - 1, 0));\n    }\n\n    const onFileChange = (e) => {\n        var reader = new FileReader();\n        reader.readAsText(e.target.files[0], \"UTF-8\");\n        reader.onload = function () {\n            var content = reader.result;\n            setFile(content);\n        };\n\n    };\n\n    const loadFileAsText = (e) => {\n        var array = file.split(/[ ,\\n]+/);\n        array = array.map(ele => parseInt(ele)).filter(val => !isNaN(val));\n        setQuickSortLastPivotResult(quickSortLastPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortFirstPivotResult(quickSortFirstPivot(Array.from(array), 0, array.length - 1, 0));\n        setQuickSortMedianPivotResult(quickSortMedianPivot(Array.from(array), 0, array.length - 1, 0));\n    }\n    return (\n        <div className=\"count-inversion-app container\">\n            <h4>Quick Sort</h4>\n            <div className=\"container\">\n                <h5>You can input multiple numbers in below input, and click button to quick sort.</h5>\n                <Input placeholder=\"Please input multiply numbers, seperate by space or comma\" onChange={validateInput} />\n                <button className=\"ant-btn\" onClick={handleSort}>Quick Sort</button>\n            </div>\n            <div className=\"container\">\n                <h5>Or you can upload txt file contains numbers, seperate by new line.</h5>\n                <input type=\"file\" id=\"fileToLoad\" onChange={onFileChange} ></input>\n                <button className=\"ant-btn\" onClick={loadFileAsText}>Quick Sort By File</button>\n            </div>\n            {quickSortFirstPivotResult && (\n                <div className=\"container \">\n                    <p>By First Pivot</p>\n                    <div className=\"container \">\n                        {quickSortFirstPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortFirstPivotResult[0])}</div>}\n                        {quickSortFirstPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortFirstPivotResult[1]}</div> : ''}\n                    </div>\n                </div>\n            )}\n            { quickSortLastPivotResult && (\n                <div className=\"container \">\n                    <p>By Last Pivot</p>\n                    <div className=\"container \">\n                        {quickSortLastPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortLastPivotResult[0])}</div>}\n                        {quickSortLastPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortLastPivotResult[1]}</div> : ''}\n                    </div>\n\n                </div>\n            )}\n            { quickSortMedianPivotResult && (\n                <div className=\"container \">\n                    <p>By Median-of-three Pivot</p>\n                    <div className=\"container \">\n                        {quickSortMedianPivotResult[0] && <div className=\"container display-text\">Sorted Array is {JSON.stringify(quickSortMedianPivotResult[0])}</div>}\n                        {quickSortMedianPivotResult[1] ? <div className=\"container\">Comparison Count is {quickSortMedianPivotResult[1]}</div> : ''}\n                    </div>\n\n                </div>\n            )}\n\n        </div>\n    );\n}\n","/Users/changlyu/Projects/website/src/components/todolist/Todo.js",[],"/Users/changlyu/Projects/website/src/redux/actions/todoActions.js",[],"/Users/changlyu/Projects/website/src/redux/selectors/selectors.js",[],"/Users/changlyu/Projects/website/src/utils/algorithm.quicksort.js",[],"/Users/changlyu/Projects/website/src/utils/logger.js",[],"/Users/changlyu/Projects/website/src/utils/math.algorithm.js",[],"/Users/changlyu/Projects/website/src/utils/algorithm.countinversion.js",[],"/Users/changlyu/Projects/website/src/constants/constants.js",[],"/Users/changlyu/Projects/website/src/redux/actions/todoActionTypes.js",[],"/Users/changlyu/Projects/website/src/redux/reducers/todos.js",["115"],"import { ADD_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO } from \"./../actions/todoActionTypes\";\nconst initialState = {\n    allIds: [],\n    byIds: {}\n};\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { id, content } = action.payload;\n            return {\n                ...state,\n                allIds: [...state.allIds, id],\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        content,\n                        completed: false\n                    }\n                }\n            };\n        }\n        case UPDATE_TODO: {\n            const { id, value } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        content: value,\n                    }\n                }\n            }\n        }\n        case DELETE_TODO: {\n            const { id } = action.payload;\n            delete state.byIds[id];\n            return {\n                ...state,\n                allIds: state.allIds.filter(item => item !== id)\n            }\n        }\n        case TOGGLE_TODO: {\n            const { id } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        completed: !state.byIds[id].completed,\n                    }\n                }\n            };\n        }\n        default:\n            return state;\n    }\n}","/Users/changlyu/Projects/website/src/redux/reducers/visibilityFilter.js",[],{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":18},{"ruleId":"116","severity":1,"message":"120","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":6,"column":1,"nodeType":"123","endLine":59,"endColumn":2},"no-unused-vars","'getTodos' is defined but never used.","Identifier","unusedVar","'logger' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration"]